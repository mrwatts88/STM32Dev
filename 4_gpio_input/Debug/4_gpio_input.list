
4_gpio_input.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000016c  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000330  08000338  00001338  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000330  08000330  00001338  2**0
                  CONTENTS
  4 .ARM          00000000  08000330  08000330  00001338  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000330  08000338  00001338  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000330  08000330  00001330  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000334  08000334  00001334  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001338  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000338  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000338  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00001338  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000322  00000000  00000000  00001368  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000dc  00000000  00000000  0000168a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  00001768  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000002c  00000000  00000000  000017b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00018a68  00000000  00000000  000017dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000055f  00000000  00000000  0001a244  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008b10a  00000000  00000000  0001a7a3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000a58ad  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000054  00000000  00000000  000a58f0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000066  00000000  00000000  000a5944  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000318 	.word	0x08000318

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000318 	.word	0x08000318

08000204 <main>:
#define PIN_5				(1U << 5)
#define PIN_13				(1U << 13)
#define BTN_PIN				(PIN_13)
#define LED_PIN				(PIN_5)

int main(void) {
 8000204:	b480      	push	{r7}
 8000206:	af00      	add	r7, sp, #0
	// enable clock for AHB1 BUS
	RCC->AHB1ENR |= GPIOAEN;
 8000208:	4b19      	ldr	r3, [pc, #100]	@ (8000270 <main+0x6c>)
 800020a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800020c:	4a18      	ldr	r2, [pc, #96]	@ (8000270 <main+0x6c>)
 800020e:	f043 0301 	orr.w	r3, r3, #1
 8000212:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOCEN;
 8000214:	4b16      	ldr	r3, [pc, #88]	@ (8000270 <main+0x6c>)
 8000216:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000218:	4a15      	ldr	r2, [pc, #84]	@ (8000270 <main+0x6c>)
 800021a:	f043 0304 	orr.w	r3, r3, #4
 800021e:	6313      	str	r3, [r2, #48]	@ 0x30

	// set up pin 5 for output mode
	GPIOA->MODER |= (1U << 10);
 8000220:	4b14      	ldr	r3, [pc, #80]	@ (8000274 <main+0x70>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	4a13      	ldr	r2, [pc, #76]	@ (8000274 <main+0x70>)
 8000226:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800022a:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &= ~(1U << 11);
 800022c:	4b11      	ldr	r3, [pc, #68]	@ (8000274 <main+0x70>)
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	4a10      	ldr	r2, [pc, #64]	@ (8000274 <main+0x70>)
 8000232:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8000236:	6013      	str	r3, [r2, #0]

	// set up pin 13 for input mode
	GPIOC->MODER &= ~(1U << 26);
 8000238:	4b0f      	ldr	r3, [pc, #60]	@ (8000278 <main+0x74>)
 800023a:	681b      	ldr	r3, [r3, #0]
 800023c:	4a0e      	ldr	r2, [pc, #56]	@ (8000278 <main+0x74>)
 800023e:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8000242:	6013      	str	r3, [r2, #0]
	GPIOC->MODER &= ~(1U << 27);
 8000244:	4b0c      	ldr	r3, [pc, #48]	@ (8000278 <main+0x74>)
 8000246:	681b      	ldr	r3, [r3, #0]
 8000248:	4a0b      	ldr	r2, [pc, #44]	@ (8000278 <main+0x74>)
 800024a:	f023 6300 	bic.w	r3, r3, #134217728	@ 0x8000000
 800024e:	6013      	str	r3, [r2, #0]

	while (1) {
		// if button is pressed pin 13 will be high
		if (GPIOC->IDR & BTN_PIN) {
 8000250:	4b09      	ldr	r3, [pc, #36]	@ (8000278 <main+0x74>)
 8000252:	691b      	ldr	r3, [r3, #16]
 8000254:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8000258:	2b00      	cmp	r3, #0
 800025a:	d003      	beq.n	8000264 <main+0x60>
			// turn LED on
			GPIOA->BSRR = LED_PIN;
 800025c:	4b05      	ldr	r3, [pc, #20]	@ (8000274 <main+0x70>)
 800025e:	2220      	movs	r2, #32
 8000260:	619a      	str	r2, [r3, #24]
 8000262:	e7f5      	b.n	8000250 <main+0x4c>
		} else {
			// turn LED off
			GPIOA->BSRR = LED_PIN << 16;
 8000264:	4b03      	ldr	r3, [pc, #12]	@ (8000274 <main+0x70>)
 8000266:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 800026a:	619a      	str	r2, [r3, #24]
		if (GPIOC->IDR & BTN_PIN) {
 800026c:	e7f0      	b.n	8000250 <main+0x4c>
 800026e:	bf00      	nop
 8000270:	40023800 	.word	0x40023800
 8000274:	40020000 	.word	0x40020000
 8000278:	40020800 	.word	0x40020800

0800027c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800027c:	480d      	ldr	r0, [pc, #52]	@ (80002b4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800027e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000280:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000284:	480c      	ldr	r0, [pc, #48]	@ (80002b8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000286:	490d      	ldr	r1, [pc, #52]	@ (80002bc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000288:	4a0d      	ldr	r2, [pc, #52]	@ (80002c0 <LoopForever+0xe>)
  movs r3, #0
 800028a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800028c:	e002      	b.n	8000294 <LoopCopyDataInit>

0800028e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800028e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000290:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000292:	3304      	adds	r3, #4

08000294 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000294:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000296:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000298:	d3f9      	bcc.n	800028e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800029a:	4a0a      	ldr	r2, [pc, #40]	@ (80002c4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800029c:	4c0a      	ldr	r4, [pc, #40]	@ (80002c8 <LoopForever+0x16>)
  movs r3, #0
 800029e:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002a0:	e001      	b.n	80002a6 <LoopFillZerobss>

080002a2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002a2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002a4:	3204      	adds	r2, #4

080002a6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002a6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002a8:	d3fb      	bcc.n	80002a2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002aa:	f000 f811 	bl	80002d0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ae:	f7ff ffa9 	bl	8000204 <main>

080002b2 <LoopForever>:

LoopForever:
  b LoopForever
 80002b2:	e7fe      	b.n	80002b2 <LoopForever>
  ldr   r0, =_estack
 80002b4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002b8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002bc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002c0:	08000338 	.word	0x08000338
  ldr r2, =_sbss
 80002c4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002c8:	2000001c 	.word	0x2000001c

080002cc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002cc:	e7fe      	b.n	80002cc <ADC_IRQHandler>
	...

080002d0 <__libc_init_array>:
 80002d0:	b570      	push	{r4, r5, r6, lr}
 80002d2:	4d0d      	ldr	r5, [pc, #52]	@ (8000308 <__libc_init_array+0x38>)
 80002d4:	4c0d      	ldr	r4, [pc, #52]	@ (800030c <__libc_init_array+0x3c>)
 80002d6:	1b64      	subs	r4, r4, r5
 80002d8:	10a4      	asrs	r4, r4, #2
 80002da:	2600      	movs	r6, #0
 80002dc:	42a6      	cmp	r6, r4
 80002de:	d109      	bne.n	80002f4 <__libc_init_array+0x24>
 80002e0:	4d0b      	ldr	r5, [pc, #44]	@ (8000310 <__libc_init_array+0x40>)
 80002e2:	4c0c      	ldr	r4, [pc, #48]	@ (8000314 <__libc_init_array+0x44>)
 80002e4:	f000 f818 	bl	8000318 <_init>
 80002e8:	1b64      	subs	r4, r4, r5
 80002ea:	10a4      	asrs	r4, r4, #2
 80002ec:	2600      	movs	r6, #0
 80002ee:	42a6      	cmp	r6, r4
 80002f0:	d105      	bne.n	80002fe <__libc_init_array+0x2e>
 80002f2:	bd70      	pop	{r4, r5, r6, pc}
 80002f4:	f855 3b04 	ldr.w	r3, [r5], #4
 80002f8:	4798      	blx	r3
 80002fa:	3601      	adds	r6, #1
 80002fc:	e7ee      	b.n	80002dc <__libc_init_array+0xc>
 80002fe:	f855 3b04 	ldr.w	r3, [r5], #4
 8000302:	4798      	blx	r3
 8000304:	3601      	adds	r6, #1
 8000306:	e7f2      	b.n	80002ee <__libc_init_array+0x1e>
 8000308:	08000330 	.word	0x08000330
 800030c:	08000330 	.word	0x08000330
 8000310:	08000330 	.word	0x08000330
 8000314:	08000334 	.word	0x08000334

08000318 <_init>:
 8000318:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800031a:	bf00      	nop
 800031c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800031e:	bc08      	pop	{r3}
 8000320:	469e      	mov	lr, r3
 8000322:	4770      	bx	lr

08000324 <_fini>:
 8000324:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000326:	bf00      	nop
 8000328:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800032a:	bc08      	pop	{r3}
 800032c:	469e      	mov	lr, r3
 800032e:	4770      	bx	lr
