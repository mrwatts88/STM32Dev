
7_uart_modular.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000011f8  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000044  080013c8  080013c8  000023c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800140c  0800140c  0000305c  2**0
                  CONTENTS
  4 .ARM          00000008  0800140c  0800140c  0000240c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001414  08001414  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001414  08001414  00002414  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001418  08001418  00002418  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  0800141c  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08001478  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08001478  000031c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000d01  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000483  00000000  00000000  00003d8d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000150  00000000  00000000  00004210  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000e3  00000000  00000000  00004360  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001a849  00000000  00000000  00004443  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001953  00000000  00000000  0001ec8c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00090c7a  00000000  00000000  000205df  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000b1259  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b9c  00000000  00000000  000b129c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000066  00000000  00000000  000b1e38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	2000005c 	.word	0x2000005c
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080013b0 	.word	0x080013b0

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000060 	.word	0x20000060
 800020c:	080013b0 	.word	0x080013b0

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <main>:
#include <stdio.h>
#include "uart.h"

void init(void);

int main(void) {
 80002b0:	b580      	push	{r7, lr}
 80002b2:	af00      	add	r7, sp, #0
	init();
 80002b4:	f000 f806 	bl	80002c4 <init>

	while (1) {
		printf("Hello world\n\r");
 80002b8:	4801      	ldr	r0, [pc, #4]	@ (80002c0 <main+0x10>)
 80002ba:	f000 fa0d 	bl	80006d8 <iprintf>
 80002be:	e7fb      	b.n	80002b8 <main+0x8>
 80002c0:	080013c8 	.word	0x080013c8

080002c4 <init>:
	}
}

void init(void) {
 80002c4:	b580      	push	{r7, lr}
 80002c6:	af00      	add	r7, sp, #0
	uart2_tx_init();
 80002c8:	f000 f8de 	bl	8000488 <uart2_tx_init>
}
 80002cc:	bf00      	nop
 80002ce:	bd80      	pop	{r7, pc}

080002d0 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002d0:	b580      	push	{r7, lr}
 80002d2:	b086      	sub	sp, #24
 80002d4:	af00      	add	r7, sp, #0
 80002d6:	60f8      	str	r0, [r7, #12]
 80002d8:	60b9      	str	r1, [r7, #8]
 80002da:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002dc:	2300      	movs	r3, #0
 80002de:	617b      	str	r3, [r7, #20]
 80002e0:	e00a      	b.n	80002f8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80002e2:	f3af 8000 	nop.w
 80002e6:	4601      	mov	r1, r0
 80002e8:	68bb      	ldr	r3, [r7, #8]
 80002ea:	1c5a      	adds	r2, r3, #1
 80002ec:	60ba      	str	r2, [r7, #8]
 80002ee:	b2ca      	uxtb	r2, r1
 80002f0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002f2:	697b      	ldr	r3, [r7, #20]
 80002f4:	3301      	adds	r3, #1
 80002f6:	617b      	str	r3, [r7, #20]
 80002f8:	697a      	ldr	r2, [r7, #20]
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	429a      	cmp	r2, r3
 80002fe:	dbf0      	blt.n	80002e2 <_read+0x12>
  }

  return len;
 8000300:	687b      	ldr	r3, [r7, #4]
}
 8000302:	4618      	mov	r0, r3
 8000304:	3718      	adds	r7, #24
 8000306:	46bd      	mov	sp, r7
 8000308:	bd80      	pop	{r7, pc}

0800030a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800030a:	b580      	push	{r7, lr}
 800030c:	b086      	sub	sp, #24
 800030e:	af00      	add	r7, sp, #0
 8000310:	60f8      	str	r0, [r7, #12]
 8000312:	60b9      	str	r1, [r7, #8]
 8000314:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000316:	2300      	movs	r3, #0
 8000318:	617b      	str	r3, [r7, #20]
 800031a:	e009      	b.n	8000330 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800031c:	68bb      	ldr	r3, [r7, #8]
 800031e:	1c5a      	adds	r2, r3, #1
 8000320:	60ba      	str	r2, [r7, #8]
 8000322:	781b      	ldrb	r3, [r3, #0]
 8000324:	4618      	mov	r0, r3
 8000326:	f000 f877 	bl	8000418 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800032a:	697b      	ldr	r3, [r7, #20]
 800032c:	3301      	adds	r3, #1
 800032e:	617b      	str	r3, [r7, #20]
 8000330:	697a      	ldr	r2, [r7, #20]
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	429a      	cmp	r2, r3
 8000336:	dbf1      	blt.n	800031c <_write+0x12>
  }
  return len;
 8000338:	687b      	ldr	r3, [r7, #4]
}
 800033a:	4618      	mov	r0, r3
 800033c:	3718      	adds	r7, #24
 800033e:	46bd      	mov	sp, r7
 8000340:	bd80      	pop	{r7, pc}

08000342 <_close>:

int _close(int file)
{
 8000342:	b480      	push	{r7}
 8000344:	b083      	sub	sp, #12
 8000346:	af00      	add	r7, sp, #0
 8000348:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800034a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 800034e:	4618      	mov	r0, r3
 8000350:	370c      	adds	r7, #12
 8000352:	46bd      	mov	sp, r7
 8000354:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000358:	4770      	bx	lr

0800035a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800035a:	b480      	push	{r7}
 800035c:	b083      	sub	sp, #12
 800035e:	af00      	add	r7, sp, #0
 8000360:	6078      	str	r0, [r7, #4]
 8000362:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000364:	683b      	ldr	r3, [r7, #0]
 8000366:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800036a:	605a      	str	r2, [r3, #4]
  return 0;
 800036c:	2300      	movs	r3, #0
}
 800036e:	4618      	mov	r0, r3
 8000370:	370c      	adds	r7, #12
 8000372:	46bd      	mov	sp, r7
 8000374:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000378:	4770      	bx	lr

0800037a <_isatty>:

int _isatty(int file)
{
 800037a:	b480      	push	{r7}
 800037c:	b083      	sub	sp, #12
 800037e:	af00      	add	r7, sp, #0
 8000380:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000382:	2301      	movs	r3, #1
}
 8000384:	4618      	mov	r0, r3
 8000386:	370c      	adds	r7, #12
 8000388:	46bd      	mov	sp, r7
 800038a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800038e:	4770      	bx	lr

08000390 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000390:	b480      	push	{r7}
 8000392:	b085      	sub	sp, #20
 8000394:	af00      	add	r7, sp, #0
 8000396:	60f8      	str	r0, [r7, #12]
 8000398:	60b9      	str	r1, [r7, #8]
 800039a:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800039c:	2300      	movs	r3, #0
}
 800039e:	4618      	mov	r0, r3
 80003a0:	3714      	adds	r7, #20
 80003a2:	46bd      	mov	sp, r7
 80003a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003a8:	4770      	bx	lr
	...

080003ac <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003ac:	b580      	push	{r7, lr}
 80003ae:	b086      	sub	sp, #24
 80003b0:	af00      	add	r7, sp, #0
 80003b2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003b4:	4a14      	ldr	r2, [pc, #80]	@ (8000408 <_sbrk+0x5c>)
 80003b6:	4b15      	ldr	r3, [pc, #84]	@ (800040c <_sbrk+0x60>)
 80003b8:	1ad3      	subs	r3, r2, r3
 80003ba:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003bc:	697b      	ldr	r3, [r7, #20]
 80003be:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003c0:	4b13      	ldr	r3, [pc, #76]	@ (8000410 <_sbrk+0x64>)
 80003c2:	681b      	ldr	r3, [r3, #0]
 80003c4:	2b00      	cmp	r3, #0
 80003c6:	d102      	bne.n	80003ce <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003c8:	4b11      	ldr	r3, [pc, #68]	@ (8000410 <_sbrk+0x64>)
 80003ca:	4a12      	ldr	r2, [pc, #72]	@ (8000414 <_sbrk+0x68>)
 80003cc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003ce:	4b10      	ldr	r3, [pc, #64]	@ (8000410 <_sbrk+0x64>)
 80003d0:	681a      	ldr	r2, [r3, #0]
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	4413      	add	r3, r2
 80003d6:	693a      	ldr	r2, [r7, #16]
 80003d8:	429a      	cmp	r2, r3
 80003da:	d207      	bcs.n	80003ec <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003dc:	f000 f996 	bl	800070c <__errno>
 80003e0:	4603      	mov	r3, r0
 80003e2:	220c      	movs	r2, #12
 80003e4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003e6:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80003ea:	e009      	b.n	8000400 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003ec:	4b08      	ldr	r3, [pc, #32]	@ (8000410 <_sbrk+0x64>)
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003f2:	4b07      	ldr	r3, [pc, #28]	@ (8000410 <_sbrk+0x64>)
 80003f4:	681a      	ldr	r2, [r3, #0]
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	4413      	add	r3, r2
 80003fa:	4a05      	ldr	r2, [pc, #20]	@ (8000410 <_sbrk+0x64>)
 80003fc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80003fe:	68fb      	ldr	r3, [r7, #12]
}
 8000400:	4618      	mov	r0, r3
 8000402:	3718      	adds	r7, #24
 8000404:	46bd      	mov	sp, r7
 8000406:	bd80      	pop	{r7, pc}
 8000408:	20020000 	.word	0x20020000
 800040c:	00000400 	.word	0x00000400
 8000410:	20000078 	.word	0x20000078
 8000414:	200001c8 	.word	0x200001c8

08000418 <__io_putchar>:
#include "stm32f4xx.h"
#include "uart.h"

int __io_putchar(int ch) {
 8000418:	b580      	push	{r7, lr}
 800041a:	b082      	sub	sp, #8
 800041c:	af00      	add	r7, sp, #0
 800041e:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 8000420:	6878      	ldr	r0, [r7, #4]
 8000422:	f000 f805 	bl	8000430 <uart2_write>
	return ch;
 8000426:	687b      	ldr	r3, [r7, #4]
}
 8000428:	4618      	mov	r0, r3
 800042a:	3708      	adds	r7, #8
 800042c:	46bd      	mov	sp, r7
 800042e:	bd80      	pop	{r7, pc}

08000430 <uart2_write>:

void uart2_write(int ch) {
 8000430:	b480      	push	{r7}
 8000432:	b083      	sub	sp, #12
 8000434:	af00      	add	r7, sp, #0
 8000436:	6078      	str	r0, [r7, #4]
	// make sure transmit data register is empty
	while (!(USART2->SR & USART_SR_TXE))
 8000438:	bf00      	nop
 800043a:	4b08      	ldr	r3, [pc, #32]	@ (800045c <uart2_write+0x2c>)
 800043c:	681b      	ldr	r3, [r3, #0]
 800043e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000442:	2b00      	cmp	r3, #0
 8000444:	d0f9      	beq.n	800043a <uart2_write+0xa>
		;

	// write to transmit data register
	USART2->DR = (ch & 0xFF);
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	4a04      	ldr	r2, [pc, #16]	@ (800045c <uart2_write+0x2c>)
 800044a:	b2db      	uxtb	r3, r3
 800044c:	6053      	str	r3, [r2, #4]
}
 800044e:	bf00      	nop
 8000450:	370c      	adds	r7, #12
 8000452:	46bd      	mov	sp, r7
 8000454:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000458:	4770      	bx	lr
 800045a:	bf00      	nop
 800045c:	40004400 	.word	0x40004400

08000460 <compute_uart_BD>:

uint16_t compute_uart_BD(uint32_t PeriphClk, uint32_t BaudRate) {
 8000460:	b480      	push	{r7}
 8000462:	b083      	sub	sp, #12
 8000464:	af00      	add	r7, sp, #0
 8000466:	6078      	str	r0, [r7, #4]
 8000468:	6039      	str	r1, [r7, #0]
	return (PeriphClk + BaudRate / 2U) / BaudRate;
 800046a:	683b      	ldr	r3, [r7, #0]
 800046c:	085a      	lsrs	r2, r3, #1
 800046e:	687b      	ldr	r3, [r7, #4]
 8000470:	441a      	add	r2, r3
 8000472:	683b      	ldr	r3, [r7, #0]
 8000474:	fbb2 f3f3 	udiv	r3, r2, r3
 8000478:	b29b      	uxth	r3, r3
}
 800047a:	4618      	mov	r0, r3
 800047c:	370c      	adds	r7, #12
 800047e:	46bd      	mov	sp, r7
 8000480:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000484:	4770      	bx	lr
	...

08000488 <uart2_tx_init>:

void uart2_tx_init(void) {
 8000488:	b580      	push	{r7, lr}
 800048a:	af00      	add	r7, sp, #0
	// configure PA2
	// 1. enable clock access to gpio A
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 800048c:	4b18      	ldr	r3, [pc, #96]	@ (80004f0 <uart2_tx_init+0x68>)
 800048e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000490:	4a17      	ldr	r2, [pc, #92]	@ (80004f0 <uart2_tx_init+0x68>)
 8000492:	f043 0301 	orr.w	r3, r3, #1
 8000496:	6313      	str	r3, [r2, #48]	@ 0x30
	// 2. set pa2 mode to AF mode
	GPIOA->MODER &= ~(1U << 4);
 8000498:	4b16      	ldr	r3, [pc, #88]	@ (80004f4 <uart2_tx_init+0x6c>)
 800049a:	681b      	ldr	r3, [r3, #0]
 800049c:	4a15      	ldr	r2, [pc, #84]	@ (80004f4 <uart2_tx_init+0x6c>)
 800049e:	f023 0310 	bic.w	r3, r3, #16
 80004a2:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U << 5);
 80004a4:	4b13      	ldr	r3, [pc, #76]	@ (80004f4 <uart2_tx_init+0x6c>)
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	4a12      	ldr	r2, [pc, #72]	@ (80004f4 <uart2_tx_init+0x6c>)
 80004aa:	f043 0320 	orr.w	r3, r3, #32
 80004ae:	6013      	str	r3, [r2, #0]
	// 3. set pa2 alternate function type to AF07 (UART_TX)
	GPIOA->AFR[0] |= (7U << 8);
 80004b0:	4b10      	ldr	r3, [pc, #64]	@ (80004f4 <uart2_tx_init+0x6c>)
 80004b2:	6a1b      	ldr	r3, [r3, #32]
 80004b4:	4a0f      	ldr	r2, [pc, #60]	@ (80004f4 <uart2_tx_init+0x6c>)
 80004b6:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 80004ba:	6213      	str	r3, [r2, #32]

	// configure USART module
	// 1. enable clock access to USART2 (APB1ENR)
	RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 80004bc:	4b0c      	ldr	r3, [pc, #48]	@ (80004f0 <uart2_tx_init+0x68>)
 80004be:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80004c0:	4a0b      	ldr	r2, [pc, #44]	@ (80004f0 <uart2_tx_init+0x68>)
 80004c2:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80004c6:	6413      	str	r3, [r2, #64]	@ 0x40
	// 2. configure USART baudrate
	USART2->BRR = compute_uart_BD(APB1_CLK, UART_BAUDRATE);
 80004c8:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
 80004cc:	480a      	ldr	r0, [pc, #40]	@ (80004f8 <uart2_tx_init+0x70>)
 80004ce:	f7ff ffc7 	bl	8000460 <compute_uart_BD>
 80004d2:	4603      	mov	r3, r0
 80004d4:	461a      	mov	r2, r3
 80004d6:	4b09      	ldr	r3, [pc, #36]	@ (80004fc <uart2_tx_init+0x74>)
 80004d8:	609a      	str	r2, [r3, #8]
	// 3. enable transmitter
	USART2->CR1 = USART_CR1_TE;
 80004da:	4b08      	ldr	r3, [pc, #32]	@ (80004fc <uart2_tx_init+0x74>)
 80004dc:	2208      	movs	r2, #8
 80004de:	60da      	str	r2, [r3, #12]
	// 4. enable USART module
	USART2->CR1 |= USART_CR1_UE;
 80004e0:	4b06      	ldr	r3, [pc, #24]	@ (80004fc <uart2_tx_init+0x74>)
 80004e2:	68db      	ldr	r3, [r3, #12]
 80004e4:	4a05      	ldr	r2, [pc, #20]	@ (80004fc <uart2_tx_init+0x74>)
 80004e6:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80004ea:	60d3      	str	r3, [r2, #12]
}
 80004ec:	bf00      	nop
 80004ee:	bd80      	pop	{r7, pc}
 80004f0:	40023800 	.word	0x40023800
 80004f4:	40020000 	.word	0x40020000
 80004f8:	00f42400 	.word	0x00f42400
 80004fc:	40004400 	.word	0x40004400

08000500 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000500:	480d      	ldr	r0, [pc, #52]	@ (8000538 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000502:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000504:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000508:	480c      	ldr	r0, [pc, #48]	@ (800053c <LoopForever+0x6>)
  ldr r1, =_edata
 800050a:	490d      	ldr	r1, [pc, #52]	@ (8000540 <LoopForever+0xa>)
  ldr r2, =_sidata
 800050c:	4a0d      	ldr	r2, [pc, #52]	@ (8000544 <LoopForever+0xe>)
  movs r3, #0
 800050e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000510:	e002      	b.n	8000518 <LoopCopyDataInit>

08000512 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000512:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000514:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000516:	3304      	adds	r3, #4

08000518 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000518:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800051a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800051c:	d3f9      	bcc.n	8000512 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800051e:	4a0a      	ldr	r2, [pc, #40]	@ (8000548 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000520:	4c0a      	ldr	r4, [pc, #40]	@ (800054c <LoopForever+0x16>)
  movs r3, #0
 8000522:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000524:	e001      	b.n	800052a <LoopFillZerobss>

08000526 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000526:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000528:	3204      	adds	r2, #4

0800052a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800052a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800052c:	d3fb      	bcc.n	8000526 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800052e:	f000 f8f3 	bl	8000718 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000532:	f7ff febd 	bl	80002b0 <main>

08000536 <LoopForever>:

LoopForever:
  b LoopForever
 8000536:	e7fe      	b.n	8000536 <LoopForever>
  ldr   r0, =_estack
 8000538:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800053c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000540:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000544:	0800141c 	.word	0x0800141c
  ldr r2, =_sbss
 8000548:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 800054c:	200001c8 	.word	0x200001c8

08000550 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000550:	e7fe      	b.n	8000550 <ADC_IRQHandler>
	...

08000554 <std>:
 8000554:	2300      	movs	r3, #0
 8000556:	b510      	push	{r4, lr}
 8000558:	4604      	mov	r4, r0
 800055a:	e9c0 3300 	strd	r3, r3, [r0]
 800055e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000562:	6083      	str	r3, [r0, #8]
 8000564:	8181      	strh	r1, [r0, #12]
 8000566:	6643      	str	r3, [r0, #100]	@ 0x64
 8000568:	81c2      	strh	r2, [r0, #14]
 800056a:	6183      	str	r3, [r0, #24]
 800056c:	4619      	mov	r1, r3
 800056e:	2208      	movs	r2, #8
 8000570:	305c      	adds	r0, #92	@ 0x5c
 8000572:	f000 f8c3 	bl	80006fc <memset>
 8000576:	4b0d      	ldr	r3, [pc, #52]	@ (80005ac <std+0x58>)
 8000578:	6263      	str	r3, [r4, #36]	@ 0x24
 800057a:	4b0d      	ldr	r3, [pc, #52]	@ (80005b0 <std+0x5c>)
 800057c:	62a3      	str	r3, [r4, #40]	@ 0x28
 800057e:	4b0d      	ldr	r3, [pc, #52]	@ (80005b4 <std+0x60>)
 8000580:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000582:	4b0d      	ldr	r3, [pc, #52]	@ (80005b8 <std+0x64>)
 8000584:	6323      	str	r3, [r4, #48]	@ 0x30
 8000586:	4b0d      	ldr	r3, [pc, #52]	@ (80005bc <std+0x68>)
 8000588:	6224      	str	r4, [r4, #32]
 800058a:	429c      	cmp	r4, r3
 800058c:	d006      	beq.n	800059c <std+0x48>
 800058e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8000592:	4294      	cmp	r4, r2
 8000594:	d002      	beq.n	800059c <std+0x48>
 8000596:	33d0      	adds	r3, #208	@ 0xd0
 8000598:	429c      	cmp	r4, r3
 800059a:	d105      	bne.n	80005a8 <std+0x54>
 800059c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80005a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005a4:	f000 b8dc 	b.w	8000760 <__retarget_lock_init_recursive>
 80005a8:	bd10      	pop	{r4, pc}
 80005aa:	bf00      	nop
 80005ac:	08000fb9 	.word	0x08000fb9
 80005b0:	08000fdb 	.word	0x08000fdb
 80005b4:	08001013 	.word	0x08001013
 80005b8:	08001037 	.word	0x08001037
 80005bc:	2000007c 	.word	0x2000007c

080005c0 <stdio_exit_handler>:
 80005c0:	4a02      	ldr	r2, [pc, #8]	@ (80005cc <stdio_exit_handler+0xc>)
 80005c2:	4903      	ldr	r1, [pc, #12]	@ (80005d0 <stdio_exit_handler+0x10>)
 80005c4:	4803      	ldr	r0, [pc, #12]	@ (80005d4 <stdio_exit_handler+0x14>)
 80005c6:	f000 b869 	b.w	800069c <_fwalk_sglue>
 80005ca:	bf00      	nop
 80005cc:	20000000 	.word	0x20000000
 80005d0:	08000f51 	.word	0x08000f51
 80005d4:	20000010 	.word	0x20000010

080005d8 <cleanup_stdio>:
 80005d8:	6841      	ldr	r1, [r0, #4]
 80005da:	4b0c      	ldr	r3, [pc, #48]	@ (800060c <cleanup_stdio+0x34>)
 80005dc:	4299      	cmp	r1, r3
 80005de:	b510      	push	{r4, lr}
 80005e0:	4604      	mov	r4, r0
 80005e2:	d001      	beq.n	80005e8 <cleanup_stdio+0x10>
 80005e4:	f000 fcb4 	bl	8000f50 <_fflush_r>
 80005e8:	68a1      	ldr	r1, [r4, #8]
 80005ea:	4b09      	ldr	r3, [pc, #36]	@ (8000610 <cleanup_stdio+0x38>)
 80005ec:	4299      	cmp	r1, r3
 80005ee:	d002      	beq.n	80005f6 <cleanup_stdio+0x1e>
 80005f0:	4620      	mov	r0, r4
 80005f2:	f000 fcad 	bl	8000f50 <_fflush_r>
 80005f6:	68e1      	ldr	r1, [r4, #12]
 80005f8:	4b06      	ldr	r3, [pc, #24]	@ (8000614 <cleanup_stdio+0x3c>)
 80005fa:	4299      	cmp	r1, r3
 80005fc:	d004      	beq.n	8000608 <cleanup_stdio+0x30>
 80005fe:	4620      	mov	r0, r4
 8000600:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000604:	f000 bca4 	b.w	8000f50 <_fflush_r>
 8000608:	bd10      	pop	{r4, pc}
 800060a:	bf00      	nop
 800060c:	2000007c 	.word	0x2000007c
 8000610:	200000e4 	.word	0x200000e4
 8000614:	2000014c 	.word	0x2000014c

08000618 <global_stdio_init.part.0>:
 8000618:	b510      	push	{r4, lr}
 800061a:	4b0b      	ldr	r3, [pc, #44]	@ (8000648 <global_stdio_init.part.0+0x30>)
 800061c:	4c0b      	ldr	r4, [pc, #44]	@ (800064c <global_stdio_init.part.0+0x34>)
 800061e:	4a0c      	ldr	r2, [pc, #48]	@ (8000650 <global_stdio_init.part.0+0x38>)
 8000620:	601a      	str	r2, [r3, #0]
 8000622:	4620      	mov	r0, r4
 8000624:	2200      	movs	r2, #0
 8000626:	2104      	movs	r1, #4
 8000628:	f7ff ff94 	bl	8000554 <std>
 800062c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000630:	2201      	movs	r2, #1
 8000632:	2109      	movs	r1, #9
 8000634:	f7ff ff8e 	bl	8000554 <std>
 8000638:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800063c:	2202      	movs	r2, #2
 800063e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000642:	2112      	movs	r1, #18
 8000644:	f7ff bf86 	b.w	8000554 <std>
 8000648:	200001b4 	.word	0x200001b4
 800064c:	2000007c 	.word	0x2000007c
 8000650:	080005c1 	.word	0x080005c1

08000654 <__sfp_lock_acquire>:
 8000654:	4801      	ldr	r0, [pc, #4]	@ (800065c <__sfp_lock_acquire+0x8>)
 8000656:	f000 b884 	b.w	8000762 <__retarget_lock_acquire_recursive>
 800065a:	bf00      	nop
 800065c:	200001b9 	.word	0x200001b9

08000660 <__sfp_lock_release>:
 8000660:	4801      	ldr	r0, [pc, #4]	@ (8000668 <__sfp_lock_release+0x8>)
 8000662:	f000 b87f 	b.w	8000764 <__retarget_lock_release_recursive>
 8000666:	bf00      	nop
 8000668:	200001b9 	.word	0x200001b9

0800066c <__sinit>:
 800066c:	b510      	push	{r4, lr}
 800066e:	4604      	mov	r4, r0
 8000670:	f7ff fff0 	bl	8000654 <__sfp_lock_acquire>
 8000674:	6a23      	ldr	r3, [r4, #32]
 8000676:	b11b      	cbz	r3, 8000680 <__sinit+0x14>
 8000678:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800067c:	f7ff bff0 	b.w	8000660 <__sfp_lock_release>
 8000680:	4b04      	ldr	r3, [pc, #16]	@ (8000694 <__sinit+0x28>)
 8000682:	6223      	str	r3, [r4, #32]
 8000684:	4b04      	ldr	r3, [pc, #16]	@ (8000698 <__sinit+0x2c>)
 8000686:	681b      	ldr	r3, [r3, #0]
 8000688:	2b00      	cmp	r3, #0
 800068a:	d1f5      	bne.n	8000678 <__sinit+0xc>
 800068c:	f7ff ffc4 	bl	8000618 <global_stdio_init.part.0>
 8000690:	e7f2      	b.n	8000678 <__sinit+0xc>
 8000692:	bf00      	nop
 8000694:	080005d9 	.word	0x080005d9
 8000698:	200001b4 	.word	0x200001b4

0800069c <_fwalk_sglue>:
 800069c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80006a0:	4607      	mov	r7, r0
 80006a2:	4688      	mov	r8, r1
 80006a4:	4614      	mov	r4, r2
 80006a6:	2600      	movs	r6, #0
 80006a8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80006ac:	f1b9 0901 	subs.w	r9, r9, #1
 80006b0:	d505      	bpl.n	80006be <_fwalk_sglue+0x22>
 80006b2:	6824      	ldr	r4, [r4, #0]
 80006b4:	2c00      	cmp	r4, #0
 80006b6:	d1f7      	bne.n	80006a8 <_fwalk_sglue+0xc>
 80006b8:	4630      	mov	r0, r6
 80006ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80006be:	89ab      	ldrh	r3, [r5, #12]
 80006c0:	2b01      	cmp	r3, #1
 80006c2:	d907      	bls.n	80006d4 <_fwalk_sglue+0x38>
 80006c4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80006c8:	3301      	adds	r3, #1
 80006ca:	d003      	beq.n	80006d4 <_fwalk_sglue+0x38>
 80006cc:	4629      	mov	r1, r5
 80006ce:	4638      	mov	r0, r7
 80006d0:	47c0      	blx	r8
 80006d2:	4306      	orrs	r6, r0
 80006d4:	3568      	adds	r5, #104	@ 0x68
 80006d6:	e7e9      	b.n	80006ac <_fwalk_sglue+0x10>

080006d8 <iprintf>:
 80006d8:	b40f      	push	{r0, r1, r2, r3}
 80006da:	b507      	push	{r0, r1, r2, lr}
 80006dc:	4906      	ldr	r1, [pc, #24]	@ (80006f8 <iprintf+0x20>)
 80006de:	ab04      	add	r3, sp, #16
 80006e0:	6808      	ldr	r0, [r1, #0]
 80006e2:	f853 2b04 	ldr.w	r2, [r3], #4
 80006e6:	6881      	ldr	r1, [r0, #8]
 80006e8:	9301      	str	r3, [sp, #4]
 80006ea:	f000 f865 	bl	80007b8 <_vfiprintf_r>
 80006ee:	b003      	add	sp, #12
 80006f0:	f85d eb04 	ldr.w	lr, [sp], #4
 80006f4:	b004      	add	sp, #16
 80006f6:	4770      	bx	lr
 80006f8:	2000000c 	.word	0x2000000c

080006fc <memset>:
 80006fc:	4402      	add	r2, r0
 80006fe:	4603      	mov	r3, r0
 8000700:	4293      	cmp	r3, r2
 8000702:	d100      	bne.n	8000706 <memset+0xa>
 8000704:	4770      	bx	lr
 8000706:	f803 1b01 	strb.w	r1, [r3], #1
 800070a:	e7f9      	b.n	8000700 <memset+0x4>

0800070c <__errno>:
 800070c:	4b01      	ldr	r3, [pc, #4]	@ (8000714 <__errno+0x8>)
 800070e:	6818      	ldr	r0, [r3, #0]
 8000710:	4770      	bx	lr
 8000712:	bf00      	nop
 8000714:	2000000c 	.word	0x2000000c

08000718 <__libc_init_array>:
 8000718:	b570      	push	{r4, r5, r6, lr}
 800071a:	4d0d      	ldr	r5, [pc, #52]	@ (8000750 <__libc_init_array+0x38>)
 800071c:	4c0d      	ldr	r4, [pc, #52]	@ (8000754 <__libc_init_array+0x3c>)
 800071e:	1b64      	subs	r4, r4, r5
 8000720:	10a4      	asrs	r4, r4, #2
 8000722:	2600      	movs	r6, #0
 8000724:	42a6      	cmp	r6, r4
 8000726:	d109      	bne.n	800073c <__libc_init_array+0x24>
 8000728:	4d0b      	ldr	r5, [pc, #44]	@ (8000758 <__libc_init_array+0x40>)
 800072a:	4c0c      	ldr	r4, [pc, #48]	@ (800075c <__libc_init_array+0x44>)
 800072c:	f000 fe40 	bl	80013b0 <_init>
 8000730:	1b64      	subs	r4, r4, r5
 8000732:	10a4      	asrs	r4, r4, #2
 8000734:	2600      	movs	r6, #0
 8000736:	42a6      	cmp	r6, r4
 8000738:	d105      	bne.n	8000746 <__libc_init_array+0x2e>
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000740:	4798      	blx	r3
 8000742:	3601      	adds	r6, #1
 8000744:	e7ee      	b.n	8000724 <__libc_init_array+0xc>
 8000746:	f855 3b04 	ldr.w	r3, [r5], #4
 800074a:	4798      	blx	r3
 800074c:	3601      	adds	r6, #1
 800074e:	e7f2      	b.n	8000736 <__libc_init_array+0x1e>
 8000750:	08001414 	.word	0x08001414
 8000754:	08001414 	.word	0x08001414
 8000758:	08001414 	.word	0x08001414
 800075c:	08001418 	.word	0x08001418

08000760 <__retarget_lock_init_recursive>:
 8000760:	4770      	bx	lr

08000762 <__retarget_lock_acquire_recursive>:
 8000762:	4770      	bx	lr

08000764 <__retarget_lock_release_recursive>:
 8000764:	4770      	bx	lr

08000766 <__sfputc_r>:
 8000766:	6893      	ldr	r3, [r2, #8]
 8000768:	3b01      	subs	r3, #1
 800076a:	2b00      	cmp	r3, #0
 800076c:	b410      	push	{r4}
 800076e:	6093      	str	r3, [r2, #8]
 8000770:	da08      	bge.n	8000784 <__sfputc_r+0x1e>
 8000772:	6994      	ldr	r4, [r2, #24]
 8000774:	42a3      	cmp	r3, r4
 8000776:	db01      	blt.n	800077c <__sfputc_r+0x16>
 8000778:	290a      	cmp	r1, #10
 800077a:	d103      	bne.n	8000784 <__sfputc_r+0x1e>
 800077c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000780:	f000 bc5d 	b.w	800103e <__swbuf_r>
 8000784:	6813      	ldr	r3, [r2, #0]
 8000786:	1c58      	adds	r0, r3, #1
 8000788:	6010      	str	r0, [r2, #0]
 800078a:	7019      	strb	r1, [r3, #0]
 800078c:	4608      	mov	r0, r1
 800078e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000792:	4770      	bx	lr

08000794 <__sfputs_r>:
 8000794:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000796:	4606      	mov	r6, r0
 8000798:	460f      	mov	r7, r1
 800079a:	4614      	mov	r4, r2
 800079c:	18d5      	adds	r5, r2, r3
 800079e:	42ac      	cmp	r4, r5
 80007a0:	d101      	bne.n	80007a6 <__sfputs_r+0x12>
 80007a2:	2000      	movs	r0, #0
 80007a4:	e007      	b.n	80007b6 <__sfputs_r+0x22>
 80007a6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80007aa:	463a      	mov	r2, r7
 80007ac:	4630      	mov	r0, r6
 80007ae:	f7ff ffda 	bl	8000766 <__sfputc_r>
 80007b2:	1c43      	adds	r3, r0, #1
 80007b4:	d1f3      	bne.n	800079e <__sfputs_r+0xa>
 80007b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080007b8 <_vfiprintf_r>:
 80007b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80007bc:	460d      	mov	r5, r1
 80007be:	b09d      	sub	sp, #116	@ 0x74
 80007c0:	4614      	mov	r4, r2
 80007c2:	4698      	mov	r8, r3
 80007c4:	4606      	mov	r6, r0
 80007c6:	b118      	cbz	r0, 80007d0 <_vfiprintf_r+0x18>
 80007c8:	6a03      	ldr	r3, [r0, #32]
 80007ca:	b90b      	cbnz	r3, 80007d0 <_vfiprintf_r+0x18>
 80007cc:	f7ff ff4e 	bl	800066c <__sinit>
 80007d0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80007d2:	07d9      	lsls	r1, r3, #31
 80007d4:	d405      	bmi.n	80007e2 <_vfiprintf_r+0x2a>
 80007d6:	89ab      	ldrh	r3, [r5, #12]
 80007d8:	059a      	lsls	r2, r3, #22
 80007da:	d402      	bmi.n	80007e2 <_vfiprintf_r+0x2a>
 80007dc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80007de:	f7ff ffc0 	bl	8000762 <__retarget_lock_acquire_recursive>
 80007e2:	89ab      	ldrh	r3, [r5, #12]
 80007e4:	071b      	lsls	r3, r3, #28
 80007e6:	d501      	bpl.n	80007ec <_vfiprintf_r+0x34>
 80007e8:	692b      	ldr	r3, [r5, #16]
 80007ea:	b99b      	cbnz	r3, 8000814 <_vfiprintf_r+0x5c>
 80007ec:	4629      	mov	r1, r5
 80007ee:	4630      	mov	r0, r6
 80007f0:	f000 fc64 	bl	80010bc <__swsetup_r>
 80007f4:	b170      	cbz	r0, 8000814 <_vfiprintf_r+0x5c>
 80007f6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80007f8:	07dc      	lsls	r4, r3, #31
 80007fa:	d504      	bpl.n	8000806 <_vfiprintf_r+0x4e>
 80007fc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000800:	b01d      	add	sp, #116	@ 0x74
 8000802:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000806:	89ab      	ldrh	r3, [r5, #12]
 8000808:	0598      	lsls	r0, r3, #22
 800080a:	d4f7      	bmi.n	80007fc <_vfiprintf_r+0x44>
 800080c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800080e:	f7ff ffa9 	bl	8000764 <__retarget_lock_release_recursive>
 8000812:	e7f3      	b.n	80007fc <_vfiprintf_r+0x44>
 8000814:	2300      	movs	r3, #0
 8000816:	9309      	str	r3, [sp, #36]	@ 0x24
 8000818:	2320      	movs	r3, #32
 800081a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800081e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000822:	2330      	movs	r3, #48	@ 0x30
 8000824:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80009d4 <_vfiprintf_r+0x21c>
 8000828:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800082c:	f04f 0901 	mov.w	r9, #1
 8000830:	4623      	mov	r3, r4
 8000832:	469a      	mov	sl, r3
 8000834:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000838:	b10a      	cbz	r2, 800083e <_vfiprintf_r+0x86>
 800083a:	2a25      	cmp	r2, #37	@ 0x25
 800083c:	d1f9      	bne.n	8000832 <_vfiprintf_r+0x7a>
 800083e:	ebba 0b04 	subs.w	fp, sl, r4
 8000842:	d00b      	beq.n	800085c <_vfiprintf_r+0xa4>
 8000844:	465b      	mov	r3, fp
 8000846:	4622      	mov	r2, r4
 8000848:	4629      	mov	r1, r5
 800084a:	4630      	mov	r0, r6
 800084c:	f7ff ffa2 	bl	8000794 <__sfputs_r>
 8000850:	3001      	adds	r0, #1
 8000852:	f000 80a7 	beq.w	80009a4 <_vfiprintf_r+0x1ec>
 8000856:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000858:	445a      	add	r2, fp
 800085a:	9209      	str	r2, [sp, #36]	@ 0x24
 800085c:	f89a 3000 	ldrb.w	r3, [sl]
 8000860:	2b00      	cmp	r3, #0
 8000862:	f000 809f 	beq.w	80009a4 <_vfiprintf_r+0x1ec>
 8000866:	2300      	movs	r3, #0
 8000868:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800086c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000870:	f10a 0a01 	add.w	sl, sl, #1
 8000874:	9304      	str	r3, [sp, #16]
 8000876:	9307      	str	r3, [sp, #28]
 8000878:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800087c:	931a      	str	r3, [sp, #104]	@ 0x68
 800087e:	4654      	mov	r4, sl
 8000880:	2205      	movs	r2, #5
 8000882:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000886:	4853      	ldr	r0, [pc, #332]	@ (80009d4 <_vfiprintf_r+0x21c>)
 8000888:	f7ff fcc2 	bl	8000210 <memchr>
 800088c:	9a04      	ldr	r2, [sp, #16]
 800088e:	b9d8      	cbnz	r0, 80008c8 <_vfiprintf_r+0x110>
 8000890:	06d1      	lsls	r1, r2, #27
 8000892:	bf44      	itt	mi
 8000894:	2320      	movmi	r3, #32
 8000896:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800089a:	0713      	lsls	r3, r2, #28
 800089c:	bf44      	itt	mi
 800089e:	232b      	movmi	r3, #43	@ 0x2b
 80008a0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80008a4:	f89a 3000 	ldrb.w	r3, [sl]
 80008a8:	2b2a      	cmp	r3, #42	@ 0x2a
 80008aa:	d015      	beq.n	80008d8 <_vfiprintf_r+0x120>
 80008ac:	9a07      	ldr	r2, [sp, #28]
 80008ae:	4654      	mov	r4, sl
 80008b0:	2000      	movs	r0, #0
 80008b2:	f04f 0c0a 	mov.w	ip, #10
 80008b6:	4621      	mov	r1, r4
 80008b8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80008bc:	3b30      	subs	r3, #48	@ 0x30
 80008be:	2b09      	cmp	r3, #9
 80008c0:	d94b      	bls.n	800095a <_vfiprintf_r+0x1a2>
 80008c2:	b1b0      	cbz	r0, 80008f2 <_vfiprintf_r+0x13a>
 80008c4:	9207      	str	r2, [sp, #28]
 80008c6:	e014      	b.n	80008f2 <_vfiprintf_r+0x13a>
 80008c8:	eba0 0308 	sub.w	r3, r0, r8
 80008cc:	fa09 f303 	lsl.w	r3, r9, r3
 80008d0:	4313      	orrs	r3, r2
 80008d2:	9304      	str	r3, [sp, #16]
 80008d4:	46a2      	mov	sl, r4
 80008d6:	e7d2      	b.n	800087e <_vfiprintf_r+0xc6>
 80008d8:	9b03      	ldr	r3, [sp, #12]
 80008da:	1d19      	adds	r1, r3, #4
 80008dc:	681b      	ldr	r3, [r3, #0]
 80008de:	9103      	str	r1, [sp, #12]
 80008e0:	2b00      	cmp	r3, #0
 80008e2:	bfbb      	ittet	lt
 80008e4:	425b      	neglt	r3, r3
 80008e6:	f042 0202 	orrlt.w	r2, r2, #2
 80008ea:	9307      	strge	r3, [sp, #28]
 80008ec:	9307      	strlt	r3, [sp, #28]
 80008ee:	bfb8      	it	lt
 80008f0:	9204      	strlt	r2, [sp, #16]
 80008f2:	7823      	ldrb	r3, [r4, #0]
 80008f4:	2b2e      	cmp	r3, #46	@ 0x2e
 80008f6:	d10a      	bne.n	800090e <_vfiprintf_r+0x156>
 80008f8:	7863      	ldrb	r3, [r4, #1]
 80008fa:	2b2a      	cmp	r3, #42	@ 0x2a
 80008fc:	d132      	bne.n	8000964 <_vfiprintf_r+0x1ac>
 80008fe:	9b03      	ldr	r3, [sp, #12]
 8000900:	1d1a      	adds	r2, r3, #4
 8000902:	681b      	ldr	r3, [r3, #0]
 8000904:	9203      	str	r2, [sp, #12]
 8000906:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800090a:	3402      	adds	r4, #2
 800090c:	9305      	str	r3, [sp, #20]
 800090e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80009e4 <_vfiprintf_r+0x22c>
 8000912:	7821      	ldrb	r1, [r4, #0]
 8000914:	2203      	movs	r2, #3
 8000916:	4650      	mov	r0, sl
 8000918:	f7ff fc7a 	bl	8000210 <memchr>
 800091c:	b138      	cbz	r0, 800092e <_vfiprintf_r+0x176>
 800091e:	9b04      	ldr	r3, [sp, #16]
 8000920:	eba0 000a 	sub.w	r0, r0, sl
 8000924:	2240      	movs	r2, #64	@ 0x40
 8000926:	4082      	lsls	r2, r0
 8000928:	4313      	orrs	r3, r2
 800092a:	3401      	adds	r4, #1
 800092c:	9304      	str	r3, [sp, #16]
 800092e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000932:	4829      	ldr	r0, [pc, #164]	@ (80009d8 <_vfiprintf_r+0x220>)
 8000934:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000938:	2206      	movs	r2, #6
 800093a:	f7ff fc69 	bl	8000210 <memchr>
 800093e:	2800      	cmp	r0, #0
 8000940:	d03f      	beq.n	80009c2 <_vfiprintf_r+0x20a>
 8000942:	4b26      	ldr	r3, [pc, #152]	@ (80009dc <_vfiprintf_r+0x224>)
 8000944:	bb1b      	cbnz	r3, 800098e <_vfiprintf_r+0x1d6>
 8000946:	9b03      	ldr	r3, [sp, #12]
 8000948:	3307      	adds	r3, #7
 800094a:	f023 0307 	bic.w	r3, r3, #7
 800094e:	3308      	adds	r3, #8
 8000950:	9303      	str	r3, [sp, #12]
 8000952:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000954:	443b      	add	r3, r7
 8000956:	9309      	str	r3, [sp, #36]	@ 0x24
 8000958:	e76a      	b.n	8000830 <_vfiprintf_r+0x78>
 800095a:	fb0c 3202 	mla	r2, ip, r2, r3
 800095e:	460c      	mov	r4, r1
 8000960:	2001      	movs	r0, #1
 8000962:	e7a8      	b.n	80008b6 <_vfiprintf_r+0xfe>
 8000964:	2300      	movs	r3, #0
 8000966:	3401      	adds	r4, #1
 8000968:	9305      	str	r3, [sp, #20]
 800096a:	4619      	mov	r1, r3
 800096c:	f04f 0c0a 	mov.w	ip, #10
 8000970:	4620      	mov	r0, r4
 8000972:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000976:	3a30      	subs	r2, #48	@ 0x30
 8000978:	2a09      	cmp	r2, #9
 800097a:	d903      	bls.n	8000984 <_vfiprintf_r+0x1cc>
 800097c:	2b00      	cmp	r3, #0
 800097e:	d0c6      	beq.n	800090e <_vfiprintf_r+0x156>
 8000980:	9105      	str	r1, [sp, #20]
 8000982:	e7c4      	b.n	800090e <_vfiprintf_r+0x156>
 8000984:	fb0c 2101 	mla	r1, ip, r1, r2
 8000988:	4604      	mov	r4, r0
 800098a:	2301      	movs	r3, #1
 800098c:	e7f0      	b.n	8000970 <_vfiprintf_r+0x1b8>
 800098e:	ab03      	add	r3, sp, #12
 8000990:	9300      	str	r3, [sp, #0]
 8000992:	462a      	mov	r2, r5
 8000994:	4b12      	ldr	r3, [pc, #72]	@ (80009e0 <_vfiprintf_r+0x228>)
 8000996:	a904      	add	r1, sp, #16
 8000998:	4630      	mov	r0, r6
 800099a:	f3af 8000 	nop.w
 800099e:	4607      	mov	r7, r0
 80009a0:	1c78      	adds	r0, r7, #1
 80009a2:	d1d6      	bne.n	8000952 <_vfiprintf_r+0x19a>
 80009a4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80009a6:	07d9      	lsls	r1, r3, #31
 80009a8:	d405      	bmi.n	80009b6 <_vfiprintf_r+0x1fe>
 80009aa:	89ab      	ldrh	r3, [r5, #12]
 80009ac:	059a      	lsls	r2, r3, #22
 80009ae:	d402      	bmi.n	80009b6 <_vfiprintf_r+0x1fe>
 80009b0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80009b2:	f7ff fed7 	bl	8000764 <__retarget_lock_release_recursive>
 80009b6:	89ab      	ldrh	r3, [r5, #12]
 80009b8:	065b      	lsls	r3, r3, #25
 80009ba:	f53f af1f 	bmi.w	80007fc <_vfiprintf_r+0x44>
 80009be:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80009c0:	e71e      	b.n	8000800 <_vfiprintf_r+0x48>
 80009c2:	ab03      	add	r3, sp, #12
 80009c4:	9300      	str	r3, [sp, #0]
 80009c6:	462a      	mov	r2, r5
 80009c8:	4b05      	ldr	r3, [pc, #20]	@ (80009e0 <_vfiprintf_r+0x228>)
 80009ca:	a904      	add	r1, sp, #16
 80009cc:	4630      	mov	r0, r6
 80009ce:	f000 f91b 	bl	8000c08 <_printf_i>
 80009d2:	e7e4      	b.n	800099e <_vfiprintf_r+0x1e6>
 80009d4:	080013d6 	.word	0x080013d6
 80009d8:	080013e0 	.word	0x080013e0
 80009dc:	00000000 	.word	0x00000000
 80009e0:	08000795 	.word	0x08000795
 80009e4:	080013dc 	.word	0x080013dc

080009e8 <sbrk_aligned>:
 80009e8:	b570      	push	{r4, r5, r6, lr}
 80009ea:	4e0f      	ldr	r6, [pc, #60]	@ (8000a28 <sbrk_aligned+0x40>)
 80009ec:	460c      	mov	r4, r1
 80009ee:	6831      	ldr	r1, [r6, #0]
 80009f0:	4605      	mov	r5, r0
 80009f2:	b911      	cbnz	r1, 80009fa <sbrk_aligned+0x12>
 80009f4:	f000 fc70 	bl	80012d8 <_sbrk_r>
 80009f8:	6030      	str	r0, [r6, #0]
 80009fa:	4621      	mov	r1, r4
 80009fc:	4628      	mov	r0, r5
 80009fe:	f000 fc6b 	bl	80012d8 <_sbrk_r>
 8000a02:	1c43      	adds	r3, r0, #1
 8000a04:	d103      	bne.n	8000a0e <sbrk_aligned+0x26>
 8000a06:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8000a0a:	4620      	mov	r0, r4
 8000a0c:	bd70      	pop	{r4, r5, r6, pc}
 8000a0e:	1cc4      	adds	r4, r0, #3
 8000a10:	f024 0403 	bic.w	r4, r4, #3
 8000a14:	42a0      	cmp	r0, r4
 8000a16:	d0f8      	beq.n	8000a0a <sbrk_aligned+0x22>
 8000a18:	1a21      	subs	r1, r4, r0
 8000a1a:	4628      	mov	r0, r5
 8000a1c:	f000 fc5c 	bl	80012d8 <_sbrk_r>
 8000a20:	3001      	adds	r0, #1
 8000a22:	d1f2      	bne.n	8000a0a <sbrk_aligned+0x22>
 8000a24:	e7ef      	b.n	8000a06 <sbrk_aligned+0x1e>
 8000a26:	bf00      	nop
 8000a28:	200001bc 	.word	0x200001bc

08000a2c <_malloc_r>:
 8000a2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a30:	1ccd      	adds	r5, r1, #3
 8000a32:	f025 0503 	bic.w	r5, r5, #3
 8000a36:	3508      	adds	r5, #8
 8000a38:	2d0c      	cmp	r5, #12
 8000a3a:	bf38      	it	cc
 8000a3c:	250c      	movcc	r5, #12
 8000a3e:	2d00      	cmp	r5, #0
 8000a40:	4606      	mov	r6, r0
 8000a42:	db01      	blt.n	8000a48 <_malloc_r+0x1c>
 8000a44:	42a9      	cmp	r1, r5
 8000a46:	d904      	bls.n	8000a52 <_malloc_r+0x26>
 8000a48:	230c      	movs	r3, #12
 8000a4a:	6033      	str	r3, [r6, #0]
 8000a4c:	2000      	movs	r0, #0
 8000a4e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a52:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000b28 <_malloc_r+0xfc>
 8000a56:	f000 faa3 	bl	8000fa0 <__malloc_lock>
 8000a5a:	f8d8 3000 	ldr.w	r3, [r8]
 8000a5e:	461c      	mov	r4, r3
 8000a60:	bb44      	cbnz	r4, 8000ab4 <_malloc_r+0x88>
 8000a62:	4629      	mov	r1, r5
 8000a64:	4630      	mov	r0, r6
 8000a66:	f7ff ffbf 	bl	80009e8 <sbrk_aligned>
 8000a6a:	1c43      	adds	r3, r0, #1
 8000a6c:	4604      	mov	r4, r0
 8000a6e:	d158      	bne.n	8000b22 <_malloc_r+0xf6>
 8000a70:	f8d8 4000 	ldr.w	r4, [r8]
 8000a74:	4627      	mov	r7, r4
 8000a76:	2f00      	cmp	r7, #0
 8000a78:	d143      	bne.n	8000b02 <_malloc_r+0xd6>
 8000a7a:	2c00      	cmp	r4, #0
 8000a7c:	d04b      	beq.n	8000b16 <_malloc_r+0xea>
 8000a7e:	6823      	ldr	r3, [r4, #0]
 8000a80:	4639      	mov	r1, r7
 8000a82:	4630      	mov	r0, r6
 8000a84:	eb04 0903 	add.w	r9, r4, r3
 8000a88:	f000 fc26 	bl	80012d8 <_sbrk_r>
 8000a8c:	4581      	cmp	r9, r0
 8000a8e:	d142      	bne.n	8000b16 <_malloc_r+0xea>
 8000a90:	6821      	ldr	r1, [r4, #0]
 8000a92:	1a6d      	subs	r5, r5, r1
 8000a94:	4629      	mov	r1, r5
 8000a96:	4630      	mov	r0, r6
 8000a98:	f7ff ffa6 	bl	80009e8 <sbrk_aligned>
 8000a9c:	3001      	adds	r0, #1
 8000a9e:	d03a      	beq.n	8000b16 <_malloc_r+0xea>
 8000aa0:	6823      	ldr	r3, [r4, #0]
 8000aa2:	442b      	add	r3, r5
 8000aa4:	6023      	str	r3, [r4, #0]
 8000aa6:	f8d8 3000 	ldr.w	r3, [r8]
 8000aaa:	685a      	ldr	r2, [r3, #4]
 8000aac:	bb62      	cbnz	r2, 8000b08 <_malloc_r+0xdc>
 8000aae:	f8c8 7000 	str.w	r7, [r8]
 8000ab2:	e00f      	b.n	8000ad4 <_malloc_r+0xa8>
 8000ab4:	6822      	ldr	r2, [r4, #0]
 8000ab6:	1b52      	subs	r2, r2, r5
 8000ab8:	d420      	bmi.n	8000afc <_malloc_r+0xd0>
 8000aba:	2a0b      	cmp	r2, #11
 8000abc:	d917      	bls.n	8000aee <_malloc_r+0xc2>
 8000abe:	1961      	adds	r1, r4, r5
 8000ac0:	42a3      	cmp	r3, r4
 8000ac2:	6025      	str	r5, [r4, #0]
 8000ac4:	bf18      	it	ne
 8000ac6:	6059      	strne	r1, [r3, #4]
 8000ac8:	6863      	ldr	r3, [r4, #4]
 8000aca:	bf08      	it	eq
 8000acc:	f8c8 1000 	streq.w	r1, [r8]
 8000ad0:	5162      	str	r2, [r4, r5]
 8000ad2:	604b      	str	r3, [r1, #4]
 8000ad4:	4630      	mov	r0, r6
 8000ad6:	f000 fa69 	bl	8000fac <__malloc_unlock>
 8000ada:	f104 000b 	add.w	r0, r4, #11
 8000ade:	1d23      	adds	r3, r4, #4
 8000ae0:	f020 0007 	bic.w	r0, r0, #7
 8000ae4:	1ac2      	subs	r2, r0, r3
 8000ae6:	bf1c      	itt	ne
 8000ae8:	1a1b      	subne	r3, r3, r0
 8000aea:	50a3      	strne	r3, [r4, r2]
 8000aec:	e7af      	b.n	8000a4e <_malloc_r+0x22>
 8000aee:	6862      	ldr	r2, [r4, #4]
 8000af0:	42a3      	cmp	r3, r4
 8000af2:	bf0c      	ite	eq
 8000af4:	f8c8 2000 	streq.w	r2, [r8]
 8000af8:	605a      	strne	r2, [r3, #4]
 8000afa:	e7eb      	b.n	8000ad4 <_malloc_r+0xa8>
 8000afc:	4623      	mov	r3, r4
 8000afe:	6864      	ldr	r4, [r4, #4]
 8000b00:	e7ae      	b.n	8000a60 <_malloc_r+0x34>
 8000b02:	463c      	mov	r4, r7
 8000b04:	687f      	ldr	r7, [r7, #4]
 8000b06:	e7b6      	b.n	8000a76 <_malloc_r+0x4a>
 8000b08:	461a      	mov	r2, r3
 8000b0a:	685b      	ldr	r3, [r3, #4]
 8000b0c:	42a3      	cmp	r3, r4
 8000b0e:	d1fb      	bne.n	8000b08 <_malloc_r+0xdc>
 8000b10:	2300      	movs	r3, #0
 8000b12:	6053      	str	r3, [r2, #4]
 8000b14:	e7de      	b.n	8000ad4 <_malloc_r+0xa8>
 8000b16:	230c      	movs	r3, #12
 8000b18:	6033      	str	r3, [r6, #0]
 8000b1a:	4630      	mov	r0, r6
 8000b1c:	f000 fa46 	bl	8000fac <__malloc_unlock>
 8000b20:	e794      	b.n	8000a4c <_malloc_r+0x20>
 8000b22:	6005      	str	r5, [r0, #0]
 8000b24:	e7d6      	b.n	8000ad4 <_malloc_r+0xa8>
 8000b26:	bf00      	nop
 8000b28:	200001c0 	.word	0x200001c0

08000b2c <_printf_common>:
 8000b2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b30:	4616      	mov	r6, r2
 8000b32:	4698      	mov	r8, r3
 8000b34:	688a      	ldr	r2, [r1, #8]
 8000b36:	690b      	ldr	r3, [r1, #16]
 8000b38:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000b3c:	4293      	cmp	r3, r2
 8000b3e:	bfb8      	it	lt
 8000b40:	4613      	movlt	r3, r2
 8000b42:	6033      	str	r3, [r6, #0]
 8000b44:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000b48:	4607      	mov	r7, r0
 8000b4a:	460c      	mov	r4, r1
 8000b4c:	b10a      	cbz	r2, 8000b52 <_printf_common+0x26>
 8000b4e:	3301      	adds	r3, #1
 8000b50:	6033      	str	r3, [r6, #0]
 8000b52:	6823      	ldr	r3, [r4, #0]
 8000b54:	0699      	lsls	r1, r3, #26
 8000b56:	bf42      	ittt	mi
 8000b58:	6833      	ldrmi	r3, [r6, #0]
 8000b5a:	3302      	addmi	r3, #2
 8000b5c:	6033      	strmi	r3, [r6, #0]
 8000b5e:	6825      	ldr	r5, [r4, #0]
 8000b60:	f015 0506 	ands.w	r5, r5, #6
 8000b64:	d106      	bne.n	8000b74 <_printf_common+0x48>
 8000b66:	f104 0a19 	add.w	sl, r4, #25
 8000b6a:	68e3      	ldr	r3, [r4, #12]
 8000b6c:	6832      	ldr	r2, [r6, #0]
 8000b6e:	1a9b      	subs	r3, r3, r2
 8000b70:	42ab      	cmp	r3, r5
 8000b72:	dc26      	bgt.n	8000bc2 <_printf_common+0x96>
 8000b74:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000b78:	6822      	ldr	r2, [r4, #0]
 8000b7a:	3b00      	subs	r3, #0
 8000b7c:	bf18      	it	ne
 8000b7e:	2301      	movne	r3, #1
 8000b80:	0692      	lsls	r2, r2, #26
 8000b82:	d42b      	bmi.n	8000bdc <_printf_common+0xb0>
 8000b84:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000b88:	4641      	mov	r1, r8
 8000b8a:	4638      	mov	r0, r7
 8000b8c:	47c8      	blx	r9
 8000b8e:	3001      	adds	r0, #1
 8000b90:	d01e      	beq.n	8000bd0 <_printf_common+0xa4>
 8000b92:	6823      	ldr	r3, [r4, #0]
 8000b94:	6922      	ldr	r2, [r4, #16]
 8000b96:	f003 0306 	and.w	r3, r3, #6
 8000b9a:	2b04      	cmp	r3, #4
 8000b9c:	bf02      	ittt	eq
 8000b9e:	68e5      	ldreq	r5, [r4, #12]
 8000ba0:	6833      	ldreq	r3, [r6, #0]
 8000ba2:	1aed      	subeq	r5, r5, r3
 8000ba4:	68a3      	ldr	r3, [r4, #8]
 8000ba6:	bf0c      	ite	eq
 8000ba8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000bac:	2500      	movne	r5, #0
 8000bae:	4293      	cmp	r3, r2
 8000bb0:	bfc4      	itt	gt
 8000bb2:	1a9b      	subgt	r3, r3, r2
 8000bb4:	18ed      	addgt	r5, r5, r3
 8000bb6:	2600      	movs	r6, #0
 8000bb8:	341a      	adds	r4, #26
 8000bba:	42b5      	cmp	r5, r6
 8000bbc:	d11a      	bne.n	8000bf4 <_printf_common+0xc8>
 8000bbe:	2000      	movs	r0, #0
 8000bc0:	e008      	b.n	8000bd4 <_printf_common+0xa8>
 8000bc2:	2301      	movs	r3, #1
 8000bc4:	4652      	mov	r2, sl
 8000bc6:	4641      	mov	r1, r8
 8000bc8:	4638      	mov	r0, r7
 8000bca:	47c8      	blx	r9
 8000bcc:	3001      	adds	r0, #1
 8000bce:	d103      	bne.n	8000bd8 <_printf_common+0xac>
 8000bd0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000bd4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bd8:	3501      	adds	r5, #1
 8000bda:	e7c6      	b.n	8000b6a <_printf_common+0x3e>
 8000bdc:	18e1      	adds	r1, r4, r3
 8000bde:	1c5a      	adds	r2, r3, #1
 8000be0:	2030      	movs	r0, #48	@ 0x30
 8000be2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000be6:	4422      	add	r2, r4
 8000be8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000bec:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000bf0:	3302      	adds	r3, #2
 8000bf2:	e7c7      	b.n	8000b84 <_printf_common+0x58>
 8000bf4:	2301      	movs	r3, #1
 8000bf6:	4622      	mov	r2, r4
 8000bf8:	4641      	mov	r1, r8
 8000bfa:	4638      	mov	r0, r7
 8000bfc:	47c8      	blx	r9
 8000bfe:	3001      	adds	r0, #1
 8000c00:	d0e6      	beq.n	8000bd0 <_printf_common+0xa4>
 8000c02:	3601      	adds	r6, #1
 8000c04:	e7d9      	b.n	8000bba <_printf_common+0x8e>
	...

08000c08 <_printf_i>:
 8000c08:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000c0c:	7e0f      	ldrb	r7, [r1, #24]
 8000c0e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000c10:	2f78      	cmp	r7, #120	@ 0x78
 8000c12:	4691      	mov	r9, r2
 8000c14:	4680      	mov	r8, r0
 8000c16:	460c      	mov	r4, r1
 8000c18:	469a      	mov	sl, r3
 8000c1a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000c1e:	d807      	bhi.n	8000c30 <_printf_i+0x28>
 8000c20:	2f62      	cmp	r7, #98	@ 0x62
 8000c22:	d80a      	bhi.n	8000c3a <_printf_i+0x32>
 8000c24:	2f00      	cmp	r7, #0
 8000c26:	f000 80d2 	beq.w	8000dce <_printf_i+0x1c6>
 8000c2a:	2f58      	cmp	r7, #88	@ 0x58
 8000c2c:	f000 80b9 	beq.w	8000da2 <_printf_i+0x19a>
 8000c30:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000c34:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000c38:	e03a      	b.n	8000cb0 <_printf_i+0xa8>
 8000c3a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000c3e:	2b15      	cmp	r3, #21
 8000c40:	d8f6      	bhi.n	8000c30 <_printf_i+0x28>
 8000c42:	a101      	add	r1, pc, #4	@ (adr r1, 8000c48 <_printf_i+0x40>)
 8000c44:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000c48:	08000ca1 	.word	0x08000ca1
 8000c4c:	08000cb5 	.word	0x08000cb5
 8000c50:	08000c31 	.word	0x08000c31
 8000c54:	08000c31 	.word	0x08000c31
 8000c58:	08000c31 	.word	0x08000c31
 8000c5c:	08000c31 	.word	0x08000c31
 8000c60:	08000cb5 	.word	0x08000cb5
 8000c64:	08000c31 	.word	0x08000c31
 8000c68:	08000c31 	.word	0x08000c31
 8000c6c:	08000c31 	.word	0x08000c31
 8000c70:	08000c31 	.word	0x08000c31
 8000c74:	08000db5 	.word	0x08000db5
 8000c78:	08000cdf 	.word	0x08000cdf
 8000c7c:	08000d6f 	.word	0x08000d6f
 8000c80:	08000c31 	.word	0x08000c31
 8000c84:	08000c31 	.word	0x08000c31
 8000c88:	08000dd7 	.word	0x08000dd7
 8000c8c:	08000c31 	.word	0x08000c31
 8000c90:	08000cdf 	.word	0x08000cdf
 8000c94:	08000c31 	.word	0x08000c31
 8000c98:	08000c31 	.word	0x08000c31
 8000c9c:	08000d77 	.word	0x08000d77
 8000ca0:	6833      	ldr	r3, [r6, #0]
 8000ca2:	1d1a      	adds	r2, r3, #4
 8000ca4:	681b      	ldr	r3, [r3, #0]
 8000ca6:	6032      	str	r2, [r6, #0]
 8000ca8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000cac:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000cb0:	2301      	movs	r3, #1
 8000cb2:	e09d      	b.n	8000df0 <_printf_i+0x1e8>
 8000cb4:	6833      	ldr	r3, [r6, #0]
 8000cb6:	6820      	ldr	r0, [r4, #0]
 8000cb8:	1d19      	adds	r1, r3, #4
 8000cba:	6031      	str	r1, [r6, #0]
 8000cbc:	0606      	lsls	r6, r0, #24
 8000cbe:	d501      	bpl.n	8000cc4 <_printf_i+0xbc>
 8000cc0:	681d      	ldr	r5, [r3, #0]
 8000cc2:	e003      	b.n	8000ccc <_printf_i+0xc4>
 8000cc4:	0645      	lsls	r5, r0, #25
 8000cc6:	d5fb      	bpl.n	8000cc0 <_printf_i+0xb8>
 8000cc8:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000ccc:	2d00      	cmp	r5, #0
 8000cce:	da03      	bge.n	8000cd8 <_printf_i+0xd0>
 8000cd0:	232d      	movs	r3, #45	@ 0x2d
 8000cd2:	426d      	negs	r5, r5
 8000cd4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000cd8:	4859      	ldr	r0, [pc, #356]	@ (8000e40 <_printf_i+0x238>)
 8000cda:	230a      	movs	r3, #10
 8000cdc:	e011      	b.n	8000d02 <_printf_i+0xfa>
 8000cde:	6821      	ldr	r1, [r4, #0]
 8000ce0:	6833      	ldr	r3, [r6, #0]
 8000ce2:	0608      	lsls	r0, r1, #24
 8000ce4:	f853 5b04 	ldr.w	r5, [r3], #4
 8000ce8:	d402      	bmi.n	8000cf0 <_printf_i+0xe8>
 8000cea:	0649      	lsls	r1, r1, #25
 8000cec:	bf48      	it	mi
 8000cee:	b2ad      	uxthmi	r5, r5
 8000cf0:	2f6f      	cmp	r7, #111	@ 0x6f
 8000cf2:	4853      	ldr	r0, [pc, #332]	@ (8000e40 <_printf_i+0x238>)
 8000cf4:	6033      	str	r3, [r6, #0]
 8000cf6:	bf14      	ite	ne
 8000cf8:	230a      	movne	r3, #10
 8000cfa:	2308      	moveq	r3, #8
 8000cfc:	2100      	movs	r1, #0
 8000cfe:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000d02:	6866      	ldr	r6, [r4, #4]
 8000d04:	60a6      	str	r6, [r4, #8]
 8000d06:	2e00      	cmp	r6, #0
 8000d08:	bfa2      	ittt	ge
 8000d0a:	6821      	ldrge	r1, [r4, #0]
 8000d0c:	f021 0104 	bicge.w	r1, r1, #4
 8000d10:	6021      	strge	r1, [r4, #0]
 8000d12:	b90d      	cbnz	r5, 8000d18 <_printf_i+0x110>
 8000d14:	2e00      	cmp	r6, #0
 8000d16:	d04b      	beq.n	8000db0 <_printf_i+0x1a8>
 8000d18:	4616      	mov	r6, r2
 8000d1a:	fbb5 f1f3 	udiv	r1, r5, r3
 8000d1e:	fb03 5711 	mls	r7, r3, r1, r5
 8000d22:	5dc7      	ldrb	r7, [r0, r7]
 8000d24:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000d28:	462f      	mov	r7, r5
 8000d2a:	42bb      	cmp	r3, r7
 8000d2c:	460d      	mov	r5, r1
 8000d2e:	d9f4      	bls.n	8000d1a <_printf_i+0x112>
 8000d30:	2b08      	cmp	r3, #8
 8000d32:	d10b      	bne.n	8000d4c <_printf_i+0x144>
 8000d34:	6823      	ldr	r3, [r4, #0]
 8000d36:	07df      	lsls	r7, r3, #31
 8000d38:	d508      	bpl.n	8000d4c <_printf_i+0x144>
 8000d3a:	6923      	ldr	r3, [r4, #16]
 8000d3c:	6861      	ldr	r1, [r4, #4]
 8000d3e:	4299      	cmp	r1, r3
 8000d40:	bfde      	ittt	le
 8000d42:	2330      	movle	r3, #48	@ 0x30
 8000d44:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000d48:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8000d4c:	1b92      	subs	r2, r2, r6
 8000d4e:	6122      	str	r2, [r4, #16]
 8000d50:	f8cd a000 	str.w	sl, [sp]
 8000d54:	464b      	mov	r3, r9
 8000d56:	aa03      	add	r2, sp, #12
 8000d58:	4621      	mov	r1, r4
 8000d5a:	4640      	mov	r0, r8
 8000d5c:	f7ff fee6 	bl	8000b2c <_printf_common>
 8000d60:	3001      	adds	r0, #1
 8000d62:	d14a      	bne.n	8000dfa <_printf_i+0x1f2>
 8000d64:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000d68:	b004      	add	sp, #16
 8000d6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d6e:	6823      	ldr	r3, [r4, #0]
 8000d70:	f043 0320 	orr.w	r3, r3, #32
 8000d74:	6023      	str	r3, [r4, #0]
 8000d76:	4833      	ldr	r0, [pc, #204]	@ (8000e44 <_printf_i+0x23c>)
 8000d78:	2778      	movs	r7, #120	@ 0x78
 8000d7a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000d7e:	6823      	ldr	r3, [r4, #0]
 8000d80:	6831      	ldr	r1, [r6, #0]
 8000d82:	061f      	lsls	r7, r3, #24
 8000d84:	f851 5b04 	ldr.w	r5, [r1], #4
 8000d88:	d402      	bmi.n	8000d90 <_printf_i+0x188>
 8000d8a:	065f      	lsls	r7, r3, #25
 8000d8c:	bf48      	it	mi
 8000d8e:	b2ad      	uxthmi	r5, r5
 8000d90:	6031      	str	r1, [r6, #0]
 8000d92:	07d9      	lsls	r1, r3, #31
 8000d94:	bf44      	itt	mi
 8000d96:	f043 0320 	orrmi.w	r3, r3, #32
 8000d9a:	6023      	strmi	r3, [r4, #0]
 8000d9c:	b11d      	cbz	r5, 8000da6 <_printf_i+0x19e>
 8000d9e:	2310      	movs	r3, #16
 8000da0:	e7ac      	b.n	8000cfc <_printf_i+0xf4>
 8000da2:	4827      	ldr	r0, [pc, #156]	@ (8000e40 <_printf_i+0x238>)
 8000da4:	e7e9      	b.n	8000d7a <_printf_i+0x172>
 8000da6:	6823      	ldr	r3, [r4, #0]
 8000da8:	f023 0320 	bic.w	r3, r3, #32
 8000dac:	6023      	str	r3, [r4, #0]
 8000dae:	e7f6      	b.n	8000d9e <_printf_i+0x196>
 8000db0:	4616      	mov	r6, r2
 8000db2:	e7bd      	b.n	8000d30 <_printf_i+0x128>
 8000db4:	6833      	ldr	r3, [r6, #0]
 8000db6:	6825      	ldr	r5, [r4, #0]
 8000db8:	6961      	ldr	r1, [r4, #20]
 8000dba:	1d18      	adds	r0, r3, #4
 8000dbc:	6030      	str	r0, [r6, #0]
 8000dbe:	062e      	lsls	r6, r5, #24
 8000dc0:	681b      	ldr	r3, [r3, #0]
 8000dc2:	d501      	bpl.n	8000dc8 <_printf_i+0x1c0>
 8000dc4:	6019      	str	r1, [r3, #0]
 8000dc6:	e002      	b.n	8000dce <_printf_i+0x1c6>
 8000dc8:	0668      	lsls	r0, r5, #25
 8000dca:	d5fb      	bpl.n	8000dc4 <_printf_i+0x1bc>
 8000dcc:	8019      	strh	r1, [r3, #0]
 8000dce:	2300      	movs	r3, #0
 8000dd0:	6123      	str	r3, [r4, #16]
 8000dd2:	4616      	mov	r6, r2
 8000dd4:	e7bc      	b.n	8000d50 <_printf_i+0x148>
 8000dd6:	6833      	ldr	r3, [r6, #0]
 8000dd8:	1d1a      	adds	r2, r3, #4
 8000dda:	6032      	str	r2, [r6, #0]
 8000ddc:	681e      	ldr	r6, [r3, #0]
 8000dde:	6862      	ldr	r2, [r4, #4]
 8000de0:	2100      	movs	r1, #0
 8000de2:	4630      	mov	r0, r6
 8000de4:	f7ff fa14 	bl	8000210 <memchr>
 8000de8:	b108      	cbz	r0, 8000dee <_printf_i+0x1e6>
 8000dea:	1b80      	subs	r0, r0, r6
 8000dec:	6060      	str	r0, [r4, #4]
 8000dee:	6863      	ldr	r3, [r4, #4]
 8000df0:	6123      	str	r3, [r4, #16]
 8000df2:	2300      	movs	r3, #0
 8000df4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000df8:	e7aa      	b.n	8000d50 <_printf_i+0x148>
 8000dfa:	6923      	ldr	r3, [r4, #16]
 8000dfc:	4632      	mov	r2, r6
 8000dfe:	4649      	mov	r1, r9
 8000e00:	4640      	mov	r0, r8
 8000e02:	47d0      	blx	sl
 8000e04:	3001      	adds	r0, #1
 8000e06:	d0ad      	beq.n	8000d64 <_printf_i+0x15c>
 8000e08:	6823      	ldr	r3, [r4, #0]
 8000e0a:	079b      	lsls	r3, r3, #30
 8000e0c:	d413      	bmi.n	8000e36 <_printf_i+0x22e>
 8000e0e:	68e0      	ldr	r0, [r4, #12]
 8000e10:	9b03      	ldr	r3, [sp, #12]
 8000e12:	4298      	cmp	r0, r3
 8000e14:	bfb8      	it	lt
 8000e16:	4618      	movlt	r0, r3
 8000e18:	e7a6      	b.n	8000d68 <_printf_i+0x160>
 8000e1a:	2301      	movs	r3, #1
 8000e1c:	4632      	mov	r2, r6
 8000e1e:	4649      	mov	r1, r9
 8000e20:	4640      	mov	r0, r8
 8000e22:	47d0      	blx	sl
 8000e24:	3001      	adds	r0, #1
 8000e26:	d09d      	beq.n	8000d64 <_printf_i+0x15c>
 8000e28:	3501      	adds	r5, #1
 8000e2a:	68e3      	ldr	r3, [r4, #12]
 8000e2c:	9903      	ldr	r1, [sp, #12]
 8000e2e:	1a5b      	subs	r3, r3, r1
 8000e30:	42ab      	cmp	r3, r5
 8000e32:	dcf2      	bgt.n	8000e1a <_printf_i+0x212>
 8000e34:	e7eb      	b.n	8000e0e <_printf_i+0x206>
 8000e36:	2500      	movs	r5, #0
 8000e38:	f104 0619 	add.w	r6, r4, #25
 8000e3c:	e7f5      	b.n	8000e2a <_printf_i+0x222>
 8000e3e:	bf00      	nop
 8000e40:	080013e7 	.word	0x080013e7
 8000e44:	080013f8 	.word	0x080013f8

08000e48 <__sflush_r>:
 8000e48:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000e4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e50:	0716      	lsls	r6, r2, #28
 8000e52:	4605      	mov	r5, r0
 8000e54:	460c      	mov	r4, r1
 8000e56:	d454      	bmi.n	8000f02 <__sflush_r+0xba>
 8000e58:	684b      	ldr	r3, [r1, #4]
 8000e5a:	2b00      	cmp	r3, #0
 8000e5c:	dc02      	bgt.n	8000e64 <__sflush_r+0x1c>
 8000e5e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000e60:	2b00      	cmp	r3, #0
 8000e62:	dd48      	ble.n	8000ef6 <__sflush_r+0xae>
 8000e64:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000e66:	2e00      	cmp	r6, #0
 8000e68:	d045      	beq.n	8000ef6 <__sflush_r+0xae>
 8000e6a:	2300      	movs	r3, #0
 8000e6c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000e70:	682f      	ldr	r7, [r5, #0]
 8000e72:	6a21      	ldr	r1, [r4, #32]
 8000e74:	602b      	str	r3, [r5, #0]
 8000e76:	d030      	beq.n	8000eda <__sflush_r+0x92>
 8000e78:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000e7a:	89a3      	ldrh	r3, [r4, #12]
 8000e7c:	0759      	lsls	r1, r3, #29
 8000e7e:	d505      	bpl.n	8000e8c <__sflush_r+0x44>
 8000e80:	6863      	ldr	r3, [r4, #4]
 8000e82:	1ad2      	subs	r2, r2, r3
 8000e84:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000e86:	b10b      	cbz	r3, 8000e8c <__sflush_r+0x44>
 8000e88:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000e8a:	1ad2      	subs	r2, r2, r3
 8000e8c:	2300      	movs	r3, #0
 8000e8e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000e90:	6a21      	ldr	r1, [r4, #32]
 8000e92:	4628      	mov	r0, r5
 8000e94:	47b0      	blx	r6
 8000e96:	1c43      	adds	r3, r0, #1
 8000e98:	89a3      	ldrh	r3, [r4, #12]
 8000e9a:	d106      	bne.n	8000eaa <__sflush_r+0x62>
 8000e9c:	6829      	ldr	r1, [r5, #0]
 8000e9e:	291d      	cmp	r1, #29
 8000ea0:	d82b      	bhi.n	8000efa <__sflush_r+0xb2>
 8000ea2:	4a2a      	ldr	r2, [pc, #168]	@ (8000f4c <__sflush_r+0x104>)
 8000ea4:	410a      	asrs	r2, r1
 8000ea6:	07d6      	lsls	r6, r2, #31
 8000ea8:	d427      	bmi.n	8000efa <__sflush_r+0xb2>
 8000eaa:	2200      	movs	r2, #0
 8000eac:	6062      	str	r2, [r4, #4]
 8000eae:	04d9      	lsls	r1, r3, #19
 8000eb0:	6922      	ldr	r2, [r4, #16]
 8000eb2:	6022      	str	r2, [r4, #0]
 8000eb4:	d504      	bpl.n	8000ec0 <__sflush_r+0x78>
 8000eb6:	1c42      	adds	r2, r0, #1
 8000eb8:	d101      	bne.n	8000ebe <__sflush_r+0x76>
 8000eba:	682b      	ldr	r3, [r5, #0]
 8000ebc:	b903      	cbnz	r3, 8000ec0 <__sflush_r+0x78>
 8000ebe:	6560      	str	r0, [r4, #84]	@ 0x54
 8000ec0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000ec2:	602f      	str	r7, [r5, #0]
 8000ec4:	b1b9      	cbz	r1, 8000ef6 <__sflush_r+0xae>
 8000ec6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000eca:	4299      	cmp	r1, r3
 8000ecc:	d002      	beq.n	8000ed4 <__sflush_r+0x8c>
 8000ece:	4628      	mov	r0, r5
 8000ed0:	f000 fa24 	bl	800131c <_free_r>
 8000ed4:	2300      	movs	r3, #0
 8000ed6:	6363      	str	r3, [r4, #52]	@ 0x34
 8000ed8:	e00d      	b.n	8000ef6 <__sflush_r+0xae>
 8000eda:	2301      	movs	r3, #1
 8000edc:	4628      	mov	r0, r5
 8000ede:	47b0      	blx	r6
 8000ee0:	4602      	mov	r2, r0
 8000ee2:	1c50      	adds	r0, r2, #1
 8000ee4:	d1c9      	bne.n	8000e7a <__sflush_r+0x32>
 8000ee6:	682b      	ldr	r3, [r5, #0]
 8000ee8:	2b00      	cmp	r3, #0
 8000eea:	d0c6      	beq.n	8000e7a <__sflush_r+0x32>
 8000eec:	2b1d      	cmp	r3, #29
 8000eee:	d001      	beq.n	8000ef4 <__sflush_r+0xac>
 8000ef0:	2b16      	cmp	r3, #22
 8000ef2:	d11e      	bne.n	8000f32 <__sflush_r+0xea>
 8000ef4:	602f      	str	r7, [r5, #0]
 8000ef6:	2000      	movs	r0, #0
 8000ef8:	e022      	b.n	8000f40 <__sflush_r+0xf8>
 8000efa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000efe:	b21b      	sxth	r3, r3
 8000f00:	e01b      	b.n	8000f3a <__sflush_r+0xf2>
 8000f02:	690f      	ldr	r7, [r1, #16]
 8000f04:	2f00      	cmp	r7, #0
 8000f06:	d0f6      	beq.n	8000ef6 <__sflush_r+0xae>
 8000f08:	0793      	lsls	r3, r2, #30
 8000f0a:	680e      	ldr	r6, [r1, #0]
 8000f0c:	bf08      	it	eq
 8000f0e:	694b      	ldreq	r3, [r1, #20]
 8000f10:	600f      	str	r7, [r1, #0]
 8000f12:	bf18      	it	ne
 8000f14:	2300      	movne	r3, #0
 8000f16:	eba6 0807 	sub.w	r8, r6, r7
 8000f1a:	608b      	str	r3, [r1, #8]
 8000f1c:	f1b8 0f00 	cmp.w	r8, #0
 8000f20:	dde9      	ble.n	8000ef6 <__sflush_r+0xae>
 8000f22:	6a21      	ldr	r1, [r4, #32]
 8000f24:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8000f26:	4643      	mov	r3, r8
 8000f28:	463a      	mov	r2, r7
 8000f2a:	4628      	mov	r0, r5
 8000f2c:	47b0      	blx	r6
 8000f2e:	2800      	cmp	r0, #0
 8000f30:	dc08      	bgt.n	8000f44 <__sflush_r+0xfc>
 8000f32:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000f36:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000f3a:	81a3      	strh	r3, [r4, #12]
 8000f3c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000f40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000f44:	4407      	add	r7, r0
 8000f46:	eba8 0800 	sub.w	r8, r8, r0
 8000f4a:	e7e7      	b.n	8000f1c <__sflush_r+0xd4>
 8000f4c:	dfbffffe 	.word	0xdfbffffe

08000f50 <_fflush_r>:
 8000f50:	b538      	push	{r3, r4, r5, lr}
 8000f52:	690b      	ldr	r3, [r1, #16]
 8000f54:	4605      	mov	r5, r0
 8000f56:	460c      	mov	r4, r1
 8000f58:	b913      	cbnz	r3, 8000f60 <_fflush_r+0x10>
 8000f5a:	2500      	movs	r5, #0
 8000f5c:	4628      	mov	r0, r5
 8000f5e:	bd38      	pop	{r3, r4, r5, pc}
 8000f60:	b118      	cbz	r0, 8000f6a <_fflush_r+0x1a>
 8000f62:	6a03      	ldr	r3, [r0, #32]
 8000f64:	b90b      	cbnz	r3, 8000f6a <_fflush_r+0x1a>
 8000f66:	f7ff fb81 	bl	800066c <__sinit>
 8000f6a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000f6e:	2b00      	cmp	r3, #0
 8000f70:	d0f3      	beq.n	8000f5a <_fflush_r+0xa>
 8000f72:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8000f74:	07d0      	lsls	r0, r2, #31
 8000f76:	d404      	bmi.n	8000f82 <_fflush_r+0x32>
 8000f78:	0599      	lsls	r1, r3, #22
 8000f7a:	d402      	bmi.n	8000f82 <_fflush_r+0x32>
 8000f7c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000f7e:	f7ff fbf0 	bl	8000762 <__retarget_lock_acquire_recursive>
 8000f82:	4628      	mov	r0, r5
 8000f84:	4621      	mov	r1, r4
 8000f86:	f7ff ff5f 	bl	8000e48 <__sflush_r>
 8000f8a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000f8c:	07da      	lsls	r2, r3, #31
 8000f8e:	4605      	mov	r5, r0
 8000f90:	d4e4      	bmi.n	8000f5c <_fflush_r+0xc>
 8000f92:	89a3      	ldrh	r3, [r4, #12]
 8000f94:	059b      	lsls	r3, r3, #22
 8000f96:	d4e1      	bmi.n	8000f5c <_fflush_r+0xc>
 8000f98:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000f9a:	f7ff fbe3 	bl	8000764 <__retarget_lock_release_recursive>
 8000f9e:	e7dd      	b.n	8000f5c <_fflush_r+0xc>

08000fa0 <__malloc_lock>:
 8000fa0:	4801      	ldr	r0, [pc, #4]	@ (8000fa8 <__malloc_lock+0x8>)
 8000fa2:	f7ff bbde 	b.w	8000762 <__retarget_lock_acquire_recursive>
 8000fa6:	bf00      	nop
 8000fa8:	200001b8 	.word	0x200001b8

08000fac <__malloc_unlock>:
 8000fac:	4801      	ldr	r0, [pc, #4]	@ (8000fb4 <__malloc_unlock+0x8>)
 8000fae:	f7ff bbd9 	b.w	8000764 <__retarget_lock_release_recursive>
 8000fb2:	bf00      	nop
 8000fb4:	200001b8 	.word	0x200001b8

08000fb8 <__sread>:
 8000fb8:	b510      	push	{r4, lr}
 8000fba:	460c      	mov	r4, r1
 8000fbc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000fc0:	f000 f978 	bl	80012b4 <_read_r>
 8000fc4:	2800      	cmp	r0, #0
 8000fc6:	bfab      	itete	ge
 8000fc8:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000fca:	89a3      	ldrhlt	r3, [r4, #12]
 8000fcc:	181b      	addge	r3, r3, r0
 8000fce:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000fd2:	bfac      	ite	ge
 8000fd4:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000fd6:	81a3      	strhlt	r3, [r4, #12]
 8000fd8:	bd10      	pop	{r4, pc}

08000fda <__swrite>:
 8000fda:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000fde:	461f      	mov	r7, r3
 8000fe0:	898b      	ldrh	r3, [r1, #12]
 8000fe2:	05db      	lsls	r3, r3, #23
 8000fe4:	4605      	mov	r5, r0
 8000fe6:	460c      	mov	r4, r1
 8000fe8:	4616      	mov	r6, r2
 8000fea:	d505      	bpl.n	8000ff8 <__swrite+0x1e>
 8000fec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ff0:	2302      	movs	r3, #2
 8000ff2:	2200      	movs	r2, #0
 8000ff4:	f000 f94c 	bl	8001290 <_lseek_r>
 8000ff8:	89a3      	ldrh	r3, [r4, #12]
 8000ffa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000ffe:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8001002:	81a3      	strh	r3, [r4, #12]
 8001004:	4632      	mov	r2, r6
 8001006:	463b      	mov	r3, r7
 8001008:	4628      	mov	r0, r5
 800100a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800100e:	f000 b973 	b.w	80012f8 <_write_r>

08001012 <__sseek>:
 8001012:	b510      	push	{r4, lr}
 8001014:	460c      	mov	r4, r1
 8001016:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800101a:	f000 f939 	bl	8001290 <_lseek_r>
 800101e:	1c43      	adds	r3, r0, #1
 8001020:	89a3      	ldrh	r3, [r4, #12]
 8001022:	bf15      	itete	ne
 8001024:	6560      	strne	r0, [r4, #84]	@ 0x54
 8001026:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800102a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800102e:	81a3      	strheq	r3, [r4, #12]
 8001030:	bf18      	it	ne
 8001032:	81a3      	strhne	r3, [r4, #12]
 8001034:	bd10      	pop	{r4, pc}

08001036 <__sclose>:
 8001036:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800103a:	f000 b8f7 	b.w	800122c <_close_r>

0800103e <__swbuf_r>:
 800103e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001040:	460e      	mov	r6, r1
 8001042:	4614      	mov	r4, r2
 8001044:	4605      	mov	r5, r0
 8001046:	b118      	cbz	r0, 8001050 <__swbuf_r+0x12>
 8001048:	6a03      	ldr	r3, [r0, #32]
 800104a:	b90b      	cbnz	r3, 8001050 <__swbuf_r+0x12>
 800104c:	f7ff fb0e 	bl	800066c <__sinit>
 8001050:	69a3      	ldr	r3, [r4, #24]
 8001052:	60a3      	str	r3, [r4, #8]
 8001054:	89a3      	ldrh	r3, [r4, #12]
 8001056:	071a      	lsls	r2, r3, #28
 8001058:	d501      	bpl.n	800105e <__swbuf_r+0x20>
 800105a:	6923      	ldr	r3, [r4, #16]
 800105c:	b943      	cbnz	r3, 8001070 <__swbuf_r+0x32>
 800105e:	4621      	mov	r1, r4
 8001060:	4628      	mov	r0, r5
 8001062:	f000 f82b 	bl	80010bc <__swsetup_r>
 8001066:	b118      	cbz	r0, 8001070 <__swbuf_r+0x32>
 8001068:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 800106c:	4638      	mov	r0, r7
 800106e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001070:	6823      	ldr	r3, [r4, #0]
 8001072:	6922      	ldr	r2, [r4, #16]
 8001074:	1a98      	subs	r0, r3, r2
 8001076:	6963      	ldr	r3, [r4, #20]
 8001078:	b2f6      	uxtb	r6, r6
 800107a:	4283      	cmp	r3, r0
 800107c:	4637      	mov	r7, r6
 800107e:	dc05      	bgt.n	800108c <__swbuf_r+0x4e>
 8001080:	4621      	mov	r1, r4
 8001082:	4628      	mov	r0, r5
 8001084:	f7ff ff64 	bl	8000f50 <_fflush_r>
 8001088:	2800      	cmp	r0, #0
 800108a:	d1ed      	bne.n	8001068 <__swbuf_r+0x2a>
 800108c:	68a3      	ldr	r3, [r4, #8]
 800108e:	3b01      	subs	r3, #1
 8001090:	60a3      	str	r3, [r4, #8]
 8001092:	6823      	ldr	r3, [r4, #0]
 8001094:	1c5a      	adds	r2, r3, #1
 8001096:	6022      	str	r2, [r4, #0]
 8001098:	701e      	strb	r6, [r3, #0]
 800109a:	6962      	ldr	r2, [r4, #20]
 800109c:	1c43      	adds	r3, r0, #1
 800109e:	429a      	cmp	r2, r3
 80010a0:	d004      	beq.n	80010ac <__swbuf_r+0x6e>
 80010a2:	89a3      	ldrh	r3, [r4, #12]
 80010a4:	07db      	lsls	r3, r3, #31
 80010a6:	d5e1      	bpl.n	800106c <__swbuf_r+0x2e>
 80010a8:	2e0a      	cmp	r6, #10
 80010aa:	d1df      	bne.n	800106c <__swbuf_r+0x2e>
 80010ac:	4621      	mov	r1, r4
 80010ae:	4628      	mov	r0, r5
 80010b0:	f7ff ff4e 	bl	8000f50 <_fflush_r>
 80010b4:	2800      	cmp	r0, #0
 80010b6:	d0d9      	beq.n	800106c <__swbuf_r+0x2e>
 80010b8:	e7d6      	b.n	8001068 <__swbuf_r+0x2a>
	...

080010bc <__swsetup_r>:
 80010bc:	b538      	push	{r3, r4, r5, lr}
 80010be:	4b29      	ldr	r3, [pc, #164]	@ (8001164 <__swsetup_r+0xa8>)
 80010c0:	4605      	mov	r5, r0
 80010c2:	6818      	ldr	r0, [r3, #0]
 80010c4:	460c      	mov	r4, r1
 80010c6:	b118      	cbz	r0, 80010d0 <__swsetup_r+0x14>
 80010c8:	6a03      	ldr	r3, [r0, #32]
 80010ca:	b90b      	cbnz	r3, 80010d0 <__swsetup_r+0x14>
 80010cc:	f7ff face 	bl	800066c <__sinit>
 80010d0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010d4:	0719      	lsls	r1, r3, #28
 80010d6:	d422      	bmi.n	800111e <__swsetup_r+0x62>
 80010d8:	06da      	lsls	r2, r3, #27
 80010da:	d407      	bmi.n	80010ec <__swsetup_r+0x30>
 80010dc:	2209      	movs	r2, #9
 80010de:	602a      	str	r2, [r5, #0]
 80010e0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80010e4:	81a3      	strh	r3, [r4, #12]
 80010e6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80010ea:	e033      	b.n	8001154 <__swsetup_r+0x98>
 80010ec:	0758      	lsls	r0, r3, #29
 80010ee:	d512      	bpl.n	8001116 <__swsetup_r+0x5a>
 80010f0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80010f2:	b141      	cbz	r1, 8001106 <__swsetup_r+0x4a>
 80010f4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80010f8:	4299      	cmp	r1, r3
 80010fa:	d002      	beq.n	8001102 <__swsetup_r+0x46>
 80010fc:	4628      	mov	r0, r5
 80010fe:	f000 f90d 	bl	800131c <_free_r>
 8001102:	2300      	movs	r3, #0
 8001104:	6363      	str	r3, [r4, #52]	@ 0x34
 8001106:	89a3      	ldrh	r3, [r4, #12]
 8001108:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800110c:	81a3      	strh	r3, [r4, #12]
 800110e:	2300      	movs	r3, #0
 8001110:	6063      	str	r3, [r4, #4]
 8001112:	6923      	ldr	r3, [r4, #16]
 8001114:	6023      	str	r3, [r4, #0]
 8001116:	89a3      	ldrh	r3, [r4, #12]
 8001118:	f043 0308 	orr.w	r3, r3, #8
 800111c:	81a3      	strh	r3, [r4, #12]
 800111e:	6923      	ldr	r3, [r4, #16]
 8001120:	b94b      	cbnz	r3, 8001136 <__swsetup_r+0x7a>
 8001122:	89a3      	ldrh	r3, [r4, #12]
 8001124:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8001128:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800112c:	d003      	beq.n	8001136 <__swsetup_r+0x7a>
 800112e:	4621      	mov	r1, r4
 8001130:	4628      	mov	r0, r5
 8001132:	f000 f83f 	bl	80011b4 <__smakebuf_r>
 8001136:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800113a:	f013 0201 	ands.w	r2, r3, #1
 800113e:	d00a      	beq.n	8001156 <__swsetup_r+0x9a>
 8001140:	2200      	movs	r2, #0
 8001142:	60a2      	str	r2, [r4, #8]
 8001144:	6962      	ldr	r2, [r4, #20]
 8001146:	4252      	negs	r2, r2
 8001148:	61a2      	str	r2, [r4, #24]
 800114a:	6922      	ldr	r2, [r4, #16]
 800114c:	b942      	cbnz	r2, 8001160 <__swsetup_r+0xa4>
 800114e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8001152:	d1c5      	bne.n	80010e0 <__swsetup_r+0x24>
 8001154:	bd38      	pop	{r3, r4, r5, pc}
 8001156:	0799      	lsls	r1, r3, #30
 8001158:	bf58      	it	pl
 800115a:	6962      	ldrpl	r2, [r4, #20]
 800115c:	60a2      	str	r2, [r4, #8]
 800115e:	e7f4      	b.n	800114a <__swsetup_r+0x8e>
 8001160:	2000      	movs	r0, #0
 8001162:	e7f7      	b.n	8001154 <__swsetup_r+0x98>
 8001164:	2000000c 	.word	0x2000000c

08001168 <__swhatbuf_r>:
 8001168:	b570      	push	{r4, r5, r6, lr}
 800116a:	460c      	mov	r4, r1
 800116c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001170:	2900      	cmp	r1, #0
 8001172:	b096      	sub	sp, #88	@ 0x58
 8001174:	4615      	mov	r5, r2
 8001176:	461e      	mov	r6, r3
 8001178:	da0d      	bge.n	8001196 <__swhatbuf_r+0x2e>
 800117a:	89a3      	ldrh	r3, [r4, #12]
 800117c:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001180:	f04f 0100 	mov.w	r1, #0
 8001184:	bf14      	ite	ne
 8001186:	2340      	movne	r3, #64	@ 0x40
 8001188:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800118c:	2000      	movs	r0, #0
 800118e:	6031      	str	r1, [r6, #0]
 8001190:	602b      	str	r3, [r5, #0]
 8001192:	b016      	add	sp, #88	@ 0x58
 8001194:	bd70      	pop	{r4, r5, r6, pc}
 8001196:	466a      	mov	r2, sp
 8001198:	f000 f858 	bl	800124c <_fstat_r>
 800119c:	2800      	cmp	r0, #0
 800119e:	dbec      	blt.n	800117a <__swhatbuf_r+0x12>
 80011a0:	9901      	ldr	r1, [sp, #4]
 80011a2:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80011a6:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80011aa:	4259      	negs	r1, r3
 80011ac:	4159      	adcs	r1, r3
 80011ae:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80011b2:	e7eb      	b.n	800118c <__swhatbuf_r+0x24>

080011b4 <__smakebuf_r>:
 80011b4:	898b      	ldrh	r3, [r1, #12]
 80011b6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80011b8:	079d      	lsls	r5, r3, #30
 80011ba:	4606      	mov	r6, r0
 80011bc:	460c      	mov	r4, r1
 80011be:	d507      	bpl.n	80011d0 <__smakebuf_r+0x1c>
 80011c0:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80011c4:	6023      	str	r3, [r4, #0]
 80011c6:	6123      	str	r3, [r4, #16]
 80011c8:	2301      	movs	r3, #1
 80011ca:	6163      	str	r3, [r4, #20]
 80011cc:	b003      	add	sp, #12
 80011ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80011d0:	ab01      	add	r3, sp, #4
 80011d2:	466a      	mov	r2, sp
 80011d4:	f7ff ffc8 	bl	8001168 <__swhatbuf_r>
 80011d8:	9f00      	ldr	r7, [sp, #0]
 80011da:	4605      	mov	r5, r0
 80011dc:	4639      	mov	r1, r7
 80011de:	4630      	mov	r0, r6
 80011e0:	f7ff fc24 	bl	8000a2c <_malloc_r>
 80011e4:	b948      	cbnz	r0, 80011fa <__smakebuf_r+0x46>
 80011e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011ea:	059a      	lsls	r2, r3, #22
 80011ec:	d4ee      	bmi.n	80011cc <__smakebuf_r+0x18>
 80011ee:	f023 0303 	bic.w	r3, r3, #3
 80011f2:	f043 0302 	orr.w	r3, r3, #2
 80011f6:	81a3      	strh	r3, [r4, #12]
 80011f8:	e7e2      	b.n	80011c0 <__smakebuf_r+0xc>
 80011fa:	89a3      	ldrh	r3, [r4, #12]
 80011fc:	6020      	str	r0, [r4, #0]
 80011fe:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001202:	81a3      	strh	r3, [r4, #12]
 8001204:	9b01      	ldr	r3, [sp, #4]
 8001206:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800120a:	b15b      	cbz	r3, 8001224 <__smakebuf_r+0x70>
 800120c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001210:	4630      	mov	r0, r6
 8001212:	f000 f82d 	bl	8001270 <_isatty_r>
 8001216:	b128      	cbz	r0, 8001224 <__smakebuf_r+0x70>
 8001218:	89a3      	ldrh	r3, [r4, #12]
 800121a:	f023 0303 	bic.w	r3, r3, #3
 800121e:	f043 0301 	orr.w	r3, r3, #1
 8001222:	81a3      	strh	r3, [r4, #12]
 8001224:	89a3      	ldrh	r3, [r4, #12]
 8001226:	431d      	orrs	r5, r3
 8001228:	81a5      	strh	r5, [r4, #12]
 800122a:	e7cf      	b.n	80011cc <__smakebuf_r+0x18>

0800122c <_close_r>:
 800122c:	b538      	push	{r3, r4, r5, lr}
 800122e:	4d06      	ldr	r5, [pc, #24]	@ (8001248 <_close_r+0x1c>)
 8001230:	2300      	movs	r3, #0
 8001232:	4604      	mov	r4, r0
 8001234:	4608      	mov	r0, r1
 8001236:	602b      	str	r3, [r5, #0]
 8001238:	f7ff f883 	bl	8000342 <_close>
 800123c:	1c43      	adds	r3, r0, #1
 800123e:	d102      	bne.n	8001246 <_close_r+0x1a>
 8001240:	682b      	ldr	r3, [r5, #0]
 8001242:	b103      	cbz	r3, 8001246 <_close_r+0x1a>
 8001244:	6023      	str	r3, [r4, #0]
 8001246:	bd38      	pop	{r3, r4, r5, pc}
 8001248:	200001c4 	.word	0x200001c4

0800124c <_fstat_r>:
 800124c:	b538      	push	{r3, r4, r5, lr}
 800124e:	4d07      	ldr	r5, [pc, #28]	@ (800126c <_fstat_r+0x20>)
 8001250:	2300      	movs	r3, #0
 8001252:	4604      	mov	r4, r0
 8001254:	4608      	mov	r0, r1
 8001256:	4611      	mov	r1, r2
 8001258:	602b      	str	r3, [r5, #0]
 800125a:	f7ff f87e 	bl	800035a <_fstat>
 800125e:	1c43      	adds	r3, r0, #1
 8001260:	d102      	bne.n	8001268 <_fstat_r+0x1c>
 8001262:	682b      	ldr	r3, [r5, #0]
 8001264:	b103      	cbz	r3, 8001268 <_fstat_r+0x1c>
 8001266:	6023      	str	r3, [r4, #0]
 8001268:	bd38      	pop	{r3, r4, r5, pc}
 800126a:	bf00      	nop
 800126c:	200001c4 	.word	0x200001c4

08001270 <_isatty_r>:
 8001270:	b538      	push	{r3, r4, r5, lr}
 8001272:	4d06      	ldr	r5, [pc, #24]	@ (800128c <_isatty_r+0x1c>)
 8001274:	2300      	movs	r3, #0
 8001276:	4604      	mov	r4, r0
 8001278:	4608      	mov	r0, r1
 800127a:	602b      	str	r3, [r5, #0]
 800127c:	f7ff f87d 	bl	800037a <_isatty>
 8001280:	1c43      	adds	r3, r0, #1
 8001282:	d102      	bne.n	800128a <_isatty_r+0x1a>
 8001284:	682b      	ldr	r3, [r5, #0]
 8001286:	b103      	cbz	r3, 800128a <_isatty_r+0x1a>
 8001288:	6023      	str	r3, [r4, #0]
 800128a:	bd38      	pop	{r3, r4, r5, pc}
 800128c:	200001c4 	.word	0x200001c4

08001290 <_lseek_r>:
 8001290:	b538      	push	{r3, r4, r5, lr}
 8001292:	4d07      	ldr	r5, [pc, #28]	@ (80012b0 <_lseek_r+0x20>)
 8001294:	4604      	mov	r4, r0
 8001296:	4608      	mov	r0, r1
 8001298:	4611      	mov	r1, r2
 800129a:	2200      	movs	r2, #0
 800129c:	602a      	str	r2, [r5, #0]
 800129e:	461a      	mov	r2, r3
 80012a0:	f7ff f876 	bl	8000390 <_lseek>
 80012a4:	1c43      	adds	r3, r0, #1
 80012a6:	d102      	bne.n	80012ae <_lseek_r+0x1e>
 80012a8:	682b      	ldr	r3, [r5, #0]
 80012aa:	b103      	cbz	r3, 80012ae <_lseek_r+0x1e>
 80012ac:	6023      	str	r3, [r4, #0]
 80012ae:	bd38      	pop	{r3, r4, r5, pc}
 80012b0:	200001c4 	.word	0x200001c4

080012b4 <_read_r>:
 80012b4:	b538      	push	{r3, r4, r5, lr}
 80012b6:	4d07      	ldr	r5, [pc, #28]	@ (80012d4 <_read_r+0x20>)
 80012b8:	4604      	mov	r4, r0
 80012ba:	4608      	mov	r0, r1
 80012bc:	4611      	mov	r1, r2
 80012be:	2200      	movs	r2, #0
 80012c0:	602a      	str	r2, [r5, #0]
 80012c2:	461a      	mov	r2, r3
 80012c4:	f7ff f804 	bl	80002d0 <_read>
 80012c8:	1c43      	adds	r3, r0, #1
 80012ca:	d102      	bne.n	80012d2 <_read_r+0x1e>
 80012cc:	682b      	ldr	r3, [r5, #0]
 80012ce:	b103      	cbz	r3, 80012d2 <_read_r+0x1e>
 80012d0:	6023      	str	r3, [r4, #0]
 80012d2:	bd38      	pop	{r3, r4, r5, pc}
 80012d4:	200001c4 	.word	0x200001c4

080012d8 <_sbrk_r>:
 80012d8:	b538      	push	{r3, r4, r5, lr}
 80012da:	4d06      	ldr	r5, [pc, #24]	@ (80012f4 <_sbrk_r+0x1c>)
 80012dc:	2300      	movs	r3, #0
 80012de:	4604      	mov	r4, r0
 80012e0:	4608      	mov	r0, r1
 80012e2:	602b      	str	r3, [r5, #0]
 80012e4:	f7ff f862 	bl	80003ac <_sbrk>
 80012e8:	1c43      	adds	r3, r0, #1
 80012ea:	d102      	bne.n	80012f2 <_sbrk_r+0x1a>
 80012ec:	682b      	ldr	r3, [r5, #0]
 80012ee:	b103      	cbz	r3, 80012f2 <_sbrk_r+0x1a>
 80012f0:	6023      	str	r3, [r4, #0]
 80012f2:	bd38      	pop	{r3, r4, r5, pc}
 80012f4:	200001c4 	.word	0x200001c4

080012f8 <_write_r>:
 80012f8:	b538      	push	{r3, r4, r5, lr}
 80012fa:	4d07      	ldr	r5, [pc, #28]	@ (8001318 <_write_r+0x20>)
 80012fc:	4604      	mov	r4, r0
 80012fe:	4608      	mov	r0, r1
 8001300:	4611      	mov	r1, r2
 8001302:	2200      	movs	r2, #0
 8001304:	602a      	str	r2, [r5, #0]
 8001306:	461a      	mov	r2, r3
 8001308:	f7fe ffff 	bl	800030a <_write>
 800130c:	1c43      	adds	r3, r0, #1
 800130e:	d102      	bne.n	8001316 <_write_r+0x1e>
 8001310:	682b      	ldr	r3, [r5, #0]
 8001312:	b103      	cbz	r3, 8001316 <_write_r+0x1e>
 8001314:	6023      	str	r3, [r4, #0]
 8001316:	bd38      	pop	{r3, r4, r5, pc}
 8001318:	200001c4 	.word	0x200001c4

0800131c <_free_r>:
 800131c:	b538      	push	{r3, r4, r5, lr}
 800131e:	4605      	mov	r5, r0
 8001320:	2900      	cmp	r1, #0
 8001322:	d041      	beq.n	80013a8 <_free_r+0x8c>
 8001324:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001328:	1f0c      	subs	r4, r1, #4
 800132a:	2b00      	cmp	r3, #0
 800132c:	bfb8      	it	lt
 800132e:	18e4      	addlt	r4, r4, r3
 8001330:	f7ff fe36 	bl	8000fa0 <__malloc_lock>
 8001334:	4a1d      	ldr	r2, [pc, #116]	@ (80013ac <_free_r+0x90>)
 8001336:	6813      	ldr	r3, [r2, #0]
 8001338:	b933      	cbnz	r3, 8001348 <_free_r+0x2c>
 800133a:	6063      	str	r3, [r4, #4]
 800133c:	6014      	str	r4, [r2, #0]
 800133e:	4628      	mov	r0, r5
 8001340:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001344:	f7ff be32 	b.w	8000fac <__malloc_unlock>
 8001348:	42a3      	cmp	r3, r4
 800134a:	d908      	bls.n	800135e <_free_r+0x42>
 800134c:	6820      	ldr	r0, [r4, #0]
 800134e:	1821      	adds	r1, r4, r0
 8001350:	428b      	cmp	r3, r1
 8001352:	bf01      	itttt	eq
 8001354:	6819      	ldreq	r1, [r3, #0]
 8001356:	685b      	ldreq	r3, [r3, #4]
 8001358:	1809      	addeq	r1, r1, r0
 800135a:	6021      	streq	r1, [r4, #0]
 800135c:	e7ed      	b.n	800133a <_free_r+0x1e>
 800135e:	461a      	mov	r2, r3
 8001360:	685b      	ldr	r3, [r3, #4]
 8001362:	b10b      	cbz	r3, 8001368 <_free_r+0x4c>
 8001364:	42a3      	cmp	r3, r4
 8001366:	d9fa      	bls.n	800135e <_free_r+0x42>
 8001368:	6811      	ldr	r1, [r2, #0]
 800136a:	1850      	adds	r0, r2, r1
 800136c:	42a0      	cmp	r0, r4
 800136e:	d10b      	bne.n	8001388 <_free_r+0x6c>
 8001370:	6820      	ldr	r0, [r4, #0]
 8001372:	4401      	add	r1, r0
 8001374:	1850      	adds	r0, r2, r1
 8001376:	4283      	cmp	r3, r0
 8001378:	6011      	str	r1, [r2, #0]
 800137a:	d1e0      	bne.n	800133e <_free_r+0x22>
 800137c:	6818      	ldr	r0, [r3, #0]
 800137e:	685b      	ldr	r3, [r3, #4]
 8001380:	6053      	str	r3, [r2, #4]
 8001382:	4408      	add	r0, r1
 8001384:	6010      	str	r0, [r2, #0]
 8001386:	e7da      	b.n	800133e <_free_r+0x22>
 8001388:	d902      	bls.n	8001390 <_free_r+0x74>
 800138a:	230c      	movs	r3, #12
 800138c:	602b      	str	r3, [r5, #0]
 800138e:	e7d6      	b.n	800133e <_free_r+0x22>
 8001390:	6820      	ldr	r0, [r4, #0]
 8001392:	1821      	adds	r1, r4, r0
 8001394:	428b      	cmp	r3, r1
 8001396:	bf04      	itt	eq
 8001398:	6819      	ldreq	r1, [r3, #0]
 800139a:	685b      	ldreq	r3, [r3, #4]
 800139c:	6063      	str	r3, [r4, #4]
 800139e:	bf04      	itt	eq
 80013a0:	1809      	addeq	r1, r1, r0
 80013a2:	6021      	streq	r1, [r4, #0]
 80013a4:	6054      	str	r4, [r2, #4]
 80013a6:	e7ca      	b.n	800133e <_free_r+0x22>
 80013a8:	bd38      	pop	{r3, r4, r5, pc}
 80013aa:	bf00      	nop
 80013ac:	200001c0 	.word	0x200001c0

080013b0 <_init>:
 80013b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013b2:	bf00      	nop
 80013b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013b6:	bc08      	pop	{r3}
 80013b8:	469e      	mov	lr, r3
 80013ba:	4770      	bx	lr

080013bc <_fini>:
 80013bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013be:	bf00      	nop
 80013c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013c2:	bc08      	pop	{r3}
 80013c4:	469e      	mov	lr, r3
 80013c6:	4770      	bx	lr
